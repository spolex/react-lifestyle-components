{"version":3,"file":"main.87aa1b29830b4f715956.hot-update.js","sources":["webpack:///./src/components/Barchart/Barchart.js","webpack:///./src/components/Chart/Chart.js"],"sourcesContent":["import { Bar, Chart } from '../Chart/Chart';\n\nexport * from './Barchart';\n// import { Chart, Bar } from './Chart';\n\nexport const Barchart = ({ data }) => {\n  // Width of each bar\n  const itemWidth = 20;\n\n  //   // Distance between each bar\n  const itemMargin = 5;\n\n  const dataLength = data.length;\n\n  //   // Normalize data, we'll reduce all sizes to 25% of their original value\n  const massagedData = data.map(datum =>\n    Object.assign({}, datum, { past: datum.past * 0.25, current: datum.current * 0.25 }),\n  );\n\n  const mostRepos = massagedData.reduce((acc, cur) => {\n    const { past } = cur.past;\n    alert(cur);\n    return past > acc ? past : acc;\n  }, 0);\n\n  const chartHeight = mostRepos;\n\n  return (\n    <div>\n      <Chart width={dataLength * (itemWidth + itemMargin)} height={chartHeight}>\n        {massagedData.map((datum, index) => (\n          <Bar\n            key={datum.name}\n            x={index * (itemWidth + itemMargin)}\n            y={0}\n            width={itemWidth}\n            height={datum.past}\n            fill=\"teal\"\n          />\n        ))}\n      </Chart>\n    </div>\n  );\n};\n","export const Chart = ({ children, width, height }) => (\n  <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n    {children}\n  </svg>\n);\n\nexport const Bar = ({ fill = '#000', x, y, width, height }) => (\n  <rect fill={fill} x={x} y={y} width={width} height={height} />\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AANA;AADA;AADA;AADA;AAeA;AAtCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}