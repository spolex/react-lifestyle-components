{"version":3,"file":"main.37bcafa3d33834c54f90.hot-update.js","sources":["webpack:///./src/stories/DT.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Barchart } from '../components/Barchart';\\nimport React from 'react';\\nimport { Col, Container, Row } from 'reactstrap';\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n   * to learn how to generate automatic titles\\n   */\\n  title: 'DT story',\\n  component: Barchart,\\n};\\n\\nconst data = [\\n  {\\n    client: 'Itau',\\n    past: 150,\\n    actual: 165,\\n  },\\n  {\\n    client: 'Santander',\\n    past: 210,\\n    actual: 190,\\n  },\\n  {\\n    client: 'Avangrid',\\n    past: 222,\\n    actual: 270,\\n  },\\n  {\\n    client: 'IDB Invest',\\n    past: 222,\\n    actual: 270,\\n  },\\n  {\\n    client: 'United Nations',\\n    past: 200,\\n    actual: 235,\\n  },\\n  //   {\\n  //     client: 'September',\\n  //     past: 280,\\n  //     actual: 330,\\n  //   },\\n  //   {\\n  //     client: 'October',\\n  //     past: 330,\\n  //     actual: 370,\\n  //   },\\n  //   {\\n  //     client: 'November',\\n  //     past: 370,\\n  //     actual: 190,\\n  //   },BarchartD3\\n  //   {\\n  //     client: 'December',\\n  //     past: 350,\\n  //     actual: 190,\\n  //   },\\n  //   {\\n  //     client: 'January',\\n  //     past: 410,\\n  //     actual: 190,\\n  //   },\\n  //   {\\n  //     client: 'February',\\n  //     past: 415,\\n  //     actual: 190,\\n  //   },\\n  //   {\\n  //     client: 'March',\\n  //     past: 475,\\n  //     actual: 190,\\n  //   },\\n];\\n\\nconst data1 = [\\n  { year: 1980, efficiency: 24.3, sales: 8949000 },\\n  { year: 1985, efficiency: 27.6, sales: 10979000 },\\n  { year: 1990, efficiency: 28, sales: 9303000 },\\n  { year: 1991, efficiency: 28.4, sales: 8185000 },\\n  { year: 1992, efficiency: 27.9, sales: 8213000 },\\n  { year: 1993, efficiency: 28.4, sales: 8518000 },\\n  { year: 1994, efficiency: 28.3, sales: 8991000 },\\n  { year: 1995, efficiency: 28.6, sales: 8620000 },\\n  { year: 1996, efficiency: 28.5, sales: 8479000 },\\n  { year: 1997, efficiency: 28.7, sales: 8217000 },\\n  { year: 1998, efficiency: 28.8, sales: 8085000 },\\n  { year: 1999, efficiency: 28.3, sales: 8638000 },\\n  { year: 2000, efficiency: 28.5, sales: 8778000 },\\n  { year: 2001, efficiency: 28.8, sales: 8352000 },\\n  { year: 2002, efficiency: 29, sales: 8042000 },\\n  { year: 2003, efficiency: 29.5, sales: 7556000 },\\n  { year: 2004, efficiency: 29.5, sales: 7483000 },\\n  { year: 2005, efficiency: 30.3, sales: 7660000 },\\n  { year: 2006, efficiency: 30.1, sales: 7762000 },\\n  { year: 2007, efficiency: 31.2, sales: 7562000 },\\n  { year: 2008, efficiency: 31.5, sales: 6769000 },\\n  { year: 2009, efficiency: 32.9, sales: 5402000 },\\n  { year: 2010, efficiency: 33.9, sales: 5636000 },\\n  { year: 2011, efficiency: 33.1, sales: 6093000 },\\n  { year: 2012, efficiency: 35.3, sales: 7245000 },\\n  { year: 2013, efficiency: 36.4, sales: 7586000 },\\n  { year: 2014, efficiency: 36.5, sales: 7708000 },\\n  { year: 2015, efficiency: 37.2, sales: 7517000 },\\n  { year: 2016, efficiency: 37.7, sales: 6873000 },\\n  { year: 2017, efficiency: 39.4, sales: 6081000 },\\n];\\n\\nexport const ActualVsBudget = () => {\\n  const style = {\\n    transform: 'rotate(-90deg)',\\n    transition: 'transform 150ms ease', // smooth transition\\n  };\\n  return (\\n    <Container>\\n      <Row>\\n        <Col xs={4} style={style}>\\n          <Barchart data={data1} y={10} diff />\\n        </Col>\\n        <Col sm={4} style={style}>\\n          <Barchart data={data1} y={0} />\\n        </Col>\\n      </Row>\\n    </Container>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ActualVsBudget\":{\"startLoc\":{\"col\":30,\"line\":110},\"endLoc\":{\"col\":1,\"line\":127},\"startBody\":{\"col\":30,\"line\":110},\"endBody\":{\"col\":1,\"line\":127}}};\n    \nimport { Barchart } from '../components/Barchart';\nimport React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'DT story',\n  component: Barchart,\n};\n\nconst data = [\n  {\n    client: 'Itau',\n    past: 150,\n    actual: 165,\n  },\n  {\n    client: 'Santander',\n    past: 210,\n    actual: 190,\n  },\n  {\n    client: 'Avangrid',\n    past: 222,\n    actual: 270,\n  },\n  {\n    client: 'IDB Invest',\n    past: 222,\n    actual: 270,\n  },\n  {\n    client: 'United Nations',\n    past: 200,\n    actual: 235,\n  },\n  //   {\n  //     client: 'September',\n  //     past: 280,\n  //     actual: 330,\n  //   },\n  //   {\n  //     client: 'October',\n  //     past: 330,\n  //     actual: 370,\n  //   },\n  //   {\n  //     client: 'November',\n  //     past: 370,\n  //     actual: 190,\n  //   },BarchartD3\n  //   {\n  //     client: 'December',\n  //     past: 350,\n  //     actual: 190,\n  //   },\n  //   {\n  //     client: 'January',\n  //     past: 410,\n  //     actual: 190,\n  //   },\n  //   {\n  //     client: 'February',\n  //     past: 415,\n  //     actual: 190,\n  //   },\n  //   {\n  //     client: 'March',\n  //     past: 475,\n  //     actual: 190,\n  //   },\n];\n\nconst data1 = [\n  { year: 1980, efficiency: 24.3, sales: 8949000 },\n  { year: 1985, efficiency: 27.6, sales: 10979000 },\n  { year: 1990, efficiency: 28, sales: 9303000 },\n  { year: 1991, efficiency: 28.4, sales: 8185000 },\n  { year: 1992, efficiency: 27.9, sales: 8213000 },\n  { year: 1993, efficiency: 28.4, sales: 8518000 },\n  { year: 1994, efficiency: 28.3, sales: 8991000 },\n  { year: 1995, efficiency: 28.6, sales: 8620000 },\n  { year: 1996, efficiency: 28.5, sales: 8479000 },\n  { year: 1997, efficiency: 28.7, sales: 8217000 },\n  { year: 1998, efficiency: 28.8, sales: 8085000 },\n  { year: 1999, efficiency: 28.3, sales: 8638000 },\n  { year: 2000, efficiency: 28.5, sales: 8778000 },\n  { year: 2001, efficiency: 28.8, sales: 8352000 },\n  { year: 2002, efficiency: 29, sales: 8042000 },\n  { year: 2003, efficiency: 29.5, sales: 7556000 },\n  { year: 2004, efficiency: 29.5, sales: 7483000 },\n  { year: 2005, efficiency: 30.3, sales: 7660000 },\n  { year: 2006, efficiency: 30.1, sales: 7762000 },\n  { year: 2007, efficiency: 31.2, sales: 7562000 },\n  { year: 2008, efficiency: 31.5, sales: 6769000 },\n  { year: 2009, efficiency: 32.9, sales: 5402000 },\n  { year: 2010, efficiency: 33.9, sales: 5636000 },\n  { year: 2011, efficiency: 33.1, sales: 6093000 },\n  { year: 2012, efficiency: 35.3, sales: 7245000 },\n  { year: 2013, efficiency: 36.4, sales: 7586000 },\n  { year: 2014, efficiency: 36.5, sales: 7708000 },\n  { year: 2015, efficiency: 37.2, sales: 7517000 },\n  { year: 2016, efficiency: 37.7, sales: 6873000 },\n  { year: 2017, efficiency: 39.4, sales: 6081000 },\n];\n\nexport const ActualVsBudget = () => {\n  const style = {\n    transform: 'rotate(-90deg)',\n    transition: 'transform 150ms ease', // smooth transition\n  };\n  return (\n    <Container>\n      <Row>\n        <Col xs={4} style={style}>\n          <Barchart data={data1} y={10} diff />\n        </Col>\n        <Col sm={4} style={style}>\n          <Barchart data={data1} y={0} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\n\n\nActualVsBudget.parameters = { storySource: { source: \"() => {\\n  const style = {\\n    transform: 'rotate(-90deg)',\\n    transition: 'transform 150ms ease', // smooth transition\\n  };\\n  return (\\n    <Container>\\n      <Row>\\n        <Col xs={4} style={style}>\\n          <Barchart data={data1} y={10} diff />\\n        </Col>\\n        <Col sm={4} style={style}>\\n          <Barchart data={data1} y={0} />\\n        </Col>\\n      </Row>\\n    </Container>\\n  );\\n}\" }, ...ActualVsBudget.parameters };"],"mappingsjBA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}