{"version":3,"file":"main.374f6194198797da8c50.hot-update.js","sources":["webpack:///./src/components/Barchart/BarchartD3.js"],"sourcesContent":["import * as d3 from 'd3';\nimport React from 'react';\nimport { useD3 } from '../../hooks';\n\nexport const BarchartD3 = ({ data }) => {\n  const ref = useD3(svg => {\n    const height = 500;\n    const width = 500;\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n\n    const x = d3\n      .scaleBand()\n      .domain(data.map(d => d.client))\n      .rangeRound([margin.left, width - margin.right])\n      .padding(0.1);\n\n    const y1 = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => d.past)])\n      .rangeRound([height - margin.bottom, margin.top]);\n\n    const xAxis = g =>\n      g.attr('transform', `translate(0,${height - margin.bottom})`).call(\n        d3\n          .axisBottom(x)\n          .tickValues(\n            d3.ticks(...d3.extent(x.domain()), width / 40).filter(v => x(v) !== undefined),\n          )\n          .tickSizeOuter(0),\n      );\n\n    const y1Axis = g =>\n      g\n        .attr('transform', `translate(${margin.left},0)`)\n        .style('color', 'steelblue')\n        .call(d3.axisLeft(y1).ticks(null, 's'))\n        .call(g => g.select('.domain').remove())\n        .call(g =>\n          g\n            .append('text')\n            .attr('x', -margin.left)\n            .attr('y', 10)\n            .attr('fill', 'currentColor')\n            .attr('text-anchor', 'start')\n            .text(data.y1),\n        );\n  });\n\n  return (\n    <svg\n      style={{\n        height: 500,\n        width: '100%',\n        marginRight: '0px',\n        marginLeft: '0px',\n      }}\n    >\n      <g className=\"plot-area\" />\n      <g className=\"x-axis\" />\n      <g className=\"y-axis\" />\n    </svg>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAIA;AAEA;AAAA;AAGA;AAAA;AAKA;AAAA;AAGA;AAEA;AAAA;AAKA;AAAA;AACA;AAOA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AA1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}