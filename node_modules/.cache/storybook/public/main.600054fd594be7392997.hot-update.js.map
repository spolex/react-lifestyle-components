{"version":3,"file":"main.600054fd594be7392997.hot-update.js","sources":["webpack:///./src/components/Button/Button.js","webpack:///./src/components/Row/Row.js","webpack:///./src/components/Table/Table.js","webpack:///./src/stories/Button.stories.jsx"],"sourcesContent":["import React from 'react';\n\nexport const Button = ({ onClick, children, color, type = 'button' }) => {\n  return (\n    <button type={type} onClick={onClick} className={'btn btn-'.concat(color)}>\n      {children}\n    </button>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Button } from '../Button';\n\nexport const Row = ({ item, onItemChange, schema, idIndex }) => {\n  return (\n    <tr>\n      <th key={item[idIndex]} scope=\"row\">\n        {item[idIndex]}\n      </th>\n    </tr>\n    // <tr>\n    //   {Object.keys(item).map(key => {\n    //     if (key === 'id') {\n    //       return (\n    //         <th key={key} scope=\"row\">\n    //           {item[key].value}\n    //         </th>\n    //       );\n    //     }\n    //     if (key === 'editable') {\n    //       return (\n    //         <td key={key}>\n    //           <Button\n    //             color={!item[key].value ? 'primary' : 'danger'}\n    //             onClick={event => onItemChange({ ...item, [key]: { value: !item[key].value } })}\n    //           >\n    //             {!item[key].value ? 'edit' : 'done'}\n    //           </Button>\n    //         </td>\n    //       );\n    //     } else {\n    //       return (\n    //         <td key={key}>\n    //           {!!item.editable.value ? (\n    //             <input\n    //               className=\"form-control\"\n    //               type={item[key].type}\n    //               value={item[key].value}\n    //               onChange={event => {\n    //                 console.log(item);\n    //                 onItemChange({\n    //                   ...item,\n    //                   [key]: { value: event.target.value, type: item[key].type },\n    //                 });\n    //                 console.log(item);\n    //               }}\n    //             />\n    //           ) : (\n    //             item[key].value\n    //           )}\n    //         </td>\n    //       );\n    //     }\n    //   })}\n    // </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '../Button';\nimport { Row } from '../Row/Row';\n\nexport const Table = ({ title, schema, data, min, max, handleOnSave }) => {\n  const [_data, setData] = useState(data);\n  const [_idIndex, setIdIndex] = useState(0);\n\n  useEffect(() => {\n    setIdIndex(schema.findIndex(field => field.name == 'id'));\n    console.log(data);\n    // setData(\n    //   _data.map(item => {\n    //     return { ...item, editable: { value: true } };\n    //   }),\n    // );\n  }, [schema]);\n\n  const handleOnAdd = () => {\n    if (_data.length < max) {\n      console.log('Adding row!!!');\n      // setData([\n      //   ..._data,\n      //   { ..._data[_data.length - 1], id: { value: _data.length + 1 }, editable: { value: true } },\n      // ]);\n    } else console.log('That is the max!!!');\n  };\n\n  const handleOnDelete = () => {\n    if (_data.length > min) {\n      console.log('We are deleting data');\n      //setData(_data.filter(item => item.id.value !== _data.length));\n    } else console.log('That is the min!!!');\n  };\n\n  const onItemChange = item => {\n    console.log(item);\n    // setData(\n    //   _data.map(serie => {\n    //     if (serie.id.value === item.id.value) {\n    //       return item;\n    //     }\n    //     return serie;\n    //   }),\n    // );\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>{title}</h2>\n      </div>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            {schema.map(col => (\n              <th key={col} scope=\"col\">\n                {col}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {/* {_data.map(row => (\n              <Row\n                key={row[_idIndex]}\n                item={row}\n                schema={schema}\n                idIndex={_idIndex}\n                onItemChange={onItemChange}\n              ></Row>\n            ))} */}\n        </tbody>\n      </table>\n      <div class=\"row\">\n        <div className=\"col-10\">\n          <Button color=\"success\" onClick={e => handleOnSave(_data)}>\n            Submit\n          </Button>\n        </div>\n        <div className=\"col-2\">\n          <Button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </Button>\n          <Button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport { Button } from '../components/Button';\\n\\nexport default {\\n  title: 'COMPONENTS/Button',\\n  component: Button,\\n};\\n\\nconst Template = args => <Button {...args}>Click me</Button>;\\n\\n//ðŸ‘‡ Each story then reuses that template\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n  color: 'primary',\\n  label: 'Button',\\n  onClick: () => console.log('You clicked on the primary button!'),\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":9},\"endLoc\":{\"col\":60,\"line\":9},\"startBody\":{\"col\":17,\"line\":9},\"endBody\":{\"col\":60,\"line\":9}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from '../components/Button';\n\nexport default {\n  title: 'COMPONENTS/Button',\n  component: Button,\n};\n\nconst Template = args => <Button {...args}>Click me</Button>;\n\n//ðŸ‘‡ Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n  color: 'primary',\n  label: 'Button',\n  onClick: () => console.log('You clicked on the primary button!'),\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"args => <Button {...args}>Click me</Button>\" }, ...Primary.parameters };"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAoDA;AArDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AADA;AADA;AADA;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AA1BA;AA2CA;AAvFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}