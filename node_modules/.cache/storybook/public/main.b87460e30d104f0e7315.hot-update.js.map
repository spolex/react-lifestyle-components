{"version":3,"file":"main.b87460e30d104f0e7315.hot-update.js","sources":["webpack:///./src/stories/DTChartjs.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { Container, Row } from 'reactstrap';\\nimport { Barchartjs2 } from '../components/Barchartjs2/Barchartjs2';\\n\\nexport default {\\n  /* üëá The title prop is optional.\\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n   * to learn how to generate automatic titles\\n   */\\n  title: 'NTTDATA/DT/Budget',\\n  component: Barchartjs2,\\n  argTypes: {\\n    variant: {\\n      options: ['x', 'y'],\\n      control: { type: 'radio' },\\n    },\\n  },\\n};\\n\\nexport const ActualVsBudget = args => {\\n  const data = {\\n    labels: [\\n      'Enel',\\n      'Santander',\\n      'Bradesco',\\n      'Ita√∫',\\n      'Mapfre',\\n      'Bbva',\\n      'Ab Inbev',\\n      'Inter American Development Bank',\\n      'United Nations',\\n      'WorldBank',\\n      'Shell',\\n      'Resolution Life',\\n      'Iberdrola',\\n      'CAF',\\n      'PNC',\\n      'GIA',\\n    ],\\n    datasets: [\\n      {\\n        label: 'FY22',\\n        data: [0.05, 0, 0, 0, 0, 0, 0, 0.75, 0.5, 0.14, 0, 0, 3.1, 0.1, 0, 0],\\n        border: 'rgb(53, 162, 235)',\\n        backgroundColor: 'rgba(53, 162, 235, 0.4)',\\n        hoverBackgroundColor: 'rgb(53, 162, 235)',\\n      },\\n      {\\n        label: 'FY23',\\n        data: [0, 0.75, 0, 0.15, 0, 0.15, 0, 1.3, 0.27, 0.15, 1.3, 0, 5.2, 0.6, 0.2, 0],\\n        border: 'rgb(255, 127, 80)',\\n        backgroundColor: 'rgba(255, 127, 80, 0.4)',\\n        hoverBackgroundColor: 'rgb(255, 127, 80)',\\n      },\\n    ],\\n  };\\n\\n  const options = {\\n    responsive: true,\\n    indexAxis: 'y',\\n    plugins: {\\n      legend: {\\n        position: 'top',\\n      },\\n      title: {\\n        display: true,\\n        text: 'Revenue',\\n      },\\n    },\\n  };\\n  return (\\n    <Container>\\n      <Row>\\n        <Barchartjs2 options={options} data={data} />\\n      </Row>\\n    </Container>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ActualVsBudget\":{\"startLoc\":{\"col\":30,\"line\":20},\"endLoc\":{\"col\":1,\"line\":78},\"startBody\":{\"col\":30,\"line\":20},\"endBody\":{\"col\":1,\"line\":78}}};\n    \nimport React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { Barchartjs2 } from '../components/Barchartjs2/Barchartjs2';\n\nexport default {\n  /* üëá The title prop is optional.\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'NTTDATA/DT/Budget',\n  component: Barchartjs2,\n  argTypes: {\n    variant: {\n      options: ['x', 'y'],\n      control: { type: 'radio' },\n    },\n  },\n};\n\nexport const ActualVsBudget = args => {\n  const data = {\n    labels: [\n      'Enel',\n      'Santander',\n      'Bradesco',\n      'Ita√∫',\n      'Mapfre',\n      'Bbva',\n      'Ab Inbev',\n      'Inter American Development Bank',\n      'United Nations',\n      'WorldBank',\n      'Shell',\n      'Resolution Life',\n      'Iberdrola',\n      'CAF',\n      'PNC',\n      'GIA',\n    ],\n    datasets: [\n      {\n        label: 'FY22',\n        data: [0.05, 0, 0, 0, 0, 0, 0, 0.75, 0.5, 0.14, 0, 0, 3.1, 0.1, 0, 0],\n        border: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.4)',\n        hoverBackgroundColor: 'rgb(53, 162, 235)',\n      },\n      {\n        label: 'FY23',\n        data: [0, 0.75, 0, 0.15, 0, 0.15, 0, 1.3, 0.27, 0.15, 1.3, 0, 5.2, 0.6, 0.2, 0],\n        border: 'rgb(255, 127, 80)',\n        backgroundColor: 'rgba(255, 127, 80, 0.4)',\n        hoverBackgroundColor: 'rgb(255, 127, 80)',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    indexAxis: 'y',\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Revenue',\n      },\n    },\n  };\n  return (\n    <Container>\n      <Row>\n        <Barchartjs2 options={options} data={data} />\n      </Row>\n    </Container>\n  );\n};\n\n\n\nActualVsBudget.parameters = { storySource: { source: \"args => {\\n  const data = {\\n    labels: [\\n      'Enel',\\n      'Santander',\\n      'Bradesco',\\n      'Ita√∫',\\n      'Mapfre',\\n      'Bbva',\\n      'Ab Inbev',\\n      'Inter American Development Bank',\\n      'United Nations',\\n      'WorldBank',\\n      'Shell',\\n      'Resolution Life',\\n      'Iberdrola',\\n      'CAF',\\n      'PNC',\\n      'GIA',\\n    ],\\n    datasets: [\\n      {\\n        label: 'FY22',\\n        data: [0.05, 0, 0, 0, 0, 0, 0, 0.75, 0.5, 0.14, 0, 0, 3.1, 0.1, 0, 0],\\n        border: 'rgb(53, 162, 235)',\\n        backgroundColor: 'rgba(53, 162, 235, 0.4)',\\n        hoverBackgroundColor: 'rgb(53, 162, 235)',\\n      },\\n      {\\n        label: 'FY23',\\n        data: [0, 0.75, 0, 0.15, 0, 0.15, 0, 1.3, 0.27, 0.15, 1.3, 0, 5.2, 0.6, 0.2, 0],\\n        border: 'rgb(255, 127, 80)',\\n        backgroundColor: 'rgba(255, 127, 80, 0.4)',\\n        hoverBackgroundColor: 'rgb(255, 127, 80)',\\n      },\\n    ],\\n  };\\n\\n  const options = {\\n    responsive: true,\\n    indexAxis: 'y',\\n    plugins: {\\n      legend: {\\n        position: 'top',\\n      },\\n      title: {\\n        display: true,\\n        text: 'Revenue',\\n      },\\n    },\\n  };\\n  return (\\n    <Container>\\n      <Row>\\n        <Barchartjs2 options={options} data={data} />\\n      </Row>\\n    </Container>\\n  );\\n}\" }, ...ActualVsBudget.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAkBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AA1DA;AA8DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}