{"version":3,"file":"main.155cda9bc57ac5c36992.hot-update.js","sources":["webpack:///./src/components/Food/Food.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Input } from 'reactstrap';\n\nexport const Food = ({ item, editable, handleProtOnChange }) => {\n  const [_item, setItem] = useState(item);\n  const [cals, setCals] = useState();\n  const [isEditable, setIsEditable] = useState(editable);\n  const [isDone, setIsDone] = useState(false);\n\n  useEffect(() => {\n    setIsEditable(editable);\n    calulateCalories();\n  }, [editable]);\n\n  const calulateCalories = () => {\n    setCals(Math.round((_carb + _prot) * 4 + _fat * 9));\n  };\n\n  const handleOnclickEdit = e => {\n    setIsEditable(true);\n  };\n\n  const handleOnclickDone = e => {\n    setIsEditable(false);\n  };\n\n  const _handleProtOnChange = value => {\n    setProt(Number(value));\n    calulateCalories();\n  };\n\n  return (\n    <tr>\n      <th scope=\"row\">{_id}</th>\n      <td>{isEditable ? <Input type=\"text\" value={_item.name} /> : _item.name}</td>\n      <td>{isEditable ? <Input type=\"text\" value={_item.group} /> : _item.group}</td>\n      <td>{isEditable ? <Input type=\"number\" value={_item.portion} /> : _item.portion + ' ' + _item.units}</td>\n      <td>{cals}</td>\n      <td>\n        {isEditable ? (\n          <Input\n            type=\"number\"\n            value={_item.prot}\n            onChange={event => handleProtOnChange({ ..._item, prot: event.target.value })}\n          />\n        ) : (\n          _prot + ' g'\n        )}\n      </td>\n      <td>{isEditable ? <Input type=\"number\" value={_carb} /> : _carb + ' g'}</td>\n      <td>{isEditable ? <Input type=\"number\" value={_fat} /> : _fat + ' g'}</td>\n      <td>\n        <Button\n          color={!isEditable ? 'primary' : 'danger'}\n          onClick={!isEditable ? handleOnclickEdit : handleOnclickDone}\n        >\n          {!isEditable ? 'edit' : 'done'}\n        </Button>\n      </td>\n    </tr>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAFA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AADA;AAnBA;AA6BA;AA1DA;;;;;;;;;;;;;;;;;A","sourceRoot":""}