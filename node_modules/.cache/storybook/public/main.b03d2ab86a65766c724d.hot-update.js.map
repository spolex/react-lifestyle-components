{"version":3,"file":"main.b03d2ab86a65766c724d.hot-update.js","sources":["webpack:///./src/components/Button/Button.js","webpack:///./src/components/Row/Row.js","webpack:///./src/components/Table/Table.js","webpack:///./src/stories/Button.stories.jsx"],"sourcesContent":["import React from 'react';\n\nexport const Button = ({ onClick, children, color, type = 'button' }) => {\n  return (\n    <button type={type} onClick={onClick} className={'btn btn-'.concat(color)}>\n      {children}\n    </button>\n  );\n};\n","import React, { useEffect } from 'react';\n\nexport const Row = ({ item, onItemChange }) => {\n  if (!item.id) return <></>;\n  if (!item.editable) return <></>;\n\n  return (\n    <tr>\n      {Object.keys(item).map(key => {\n        if (key === 'id') {\n          return (\n            <th key={key} scope=\"row\">\n              {item[key].value}\n            </th>\n          );\n        }\n        if (key === 'editable') {\n          return (\n            <td key={key}>\n              <button\n                color={!item[key].value ? 'primary' : 'danger'}\n                onClick={event => onItemChange({ ...item, [key]: { value: !item[key].value } })}\n              >\n                {!item[key].value ? 'edit' : 'done'}\n              </button>\n            </td>\n          );\n        } else {\n          return (\n            <td key={key}>\n              {!!item.editable.value ? (\n                <input\n                  type={item[key].type}\n                  value={item[key].value}\n                  onChange={event => {\n                    console.log(item);\n                    onItemChange({\n                      ...item,\n                      [key]: { value: event.target.value, type: item[key].type },\n                    });\n                    console.log(item);\n                  }}\n                />\n              ) : (\n                item[key].value\n              )}\n            </td>\n          );\n        }\n      })}\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '../Button';\nimport { Row } from '../Row/Row';\n\nexport const Table = ({ title, data, min, max, handleOnSave }) => {\n  const [_data, setData] = useState(data);\n\n  useEffect(() => {\n    setData(\n      _data.map(item => {\n        return { ...item, editable: { value: true } };\n      }),\n    );\n  }, []);\n\n  const handleOnAdd = () => {\n    if (_data.length < max) {\n      setData([\n        ..._data,\n        { ..._data[_data.length - 1], id: { value: _data.length + 1 }, editable: { value: true } },\n      ]);\n    } else console.log('That is the max!!!');\n  };\n\n  const handleOnDelete = () => {\n    if (_data.length > min) {\n      setData(_data.filter(item => item.id.value !== _data.length));\n    } else console.log('That is the min!!!');\n  };\n\n  const onItemChange = item => {\n    console.log(item);\n    setData(\n      _data.map(serie => {\n        if (serie.id.value === item.id.value) {\n          return item;\n        }\n        return serie;\n      }),\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>{title}</h2>\n      </div>\n      <div>\n        <table>\n          <thead>\n            <tr>\n              {Object.keys(data[0]).map(c => (\n                <th key={c}>{c}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {_data.map(item => (\n              <Row key={item.id.value} item={item} onItemChange={onItemChange}></Row>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <div xs={8}>\n          <Button color=\"success\" onClick={e => handleOnSave(_data)}>\n            Save\n          </Button>\n        </div>\n        <div xs={4}>\n          <Button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </Button>\n          <button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport { Button } from '../components/Button';\\n\\nexport default {\\n  title: 'COMPONENTS/Button',\\n  component: Button,\\n};\\n\\nconst Template = args => <Button {...args}>Click me</Button>;\\n\\n//ðŸ‘‡ Each story then reuses that template\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n  color: 'primary',\\n  label: 'Button',\\n  onClick: () => console.log('You clicked on the primary button!'),\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":9},\"endLoc\":{\"col\":60,\"line\":9},\"startBody\":{\"col\":17,\"line\":9},\"endBody\":{\"col\":60,\"line\":9}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from '../components/Button';\n\nexport default {\n  title: 'COMPONENTS/Button',\n  component: Button,\n};\n\nconst Template = args => <Button {...args}>Click me</Button>;\n\n//ðŸ‘‡ Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n  color: 'primary',\n  label: 'Button',\n  onClick: () => console.log('You clicked on the primary button!'),\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"args => <Button {...args}>Click me</Button>\" }, ...Primary.parameters };"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AADA;AASA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAVA;AAFA;AAmBA;AACA;AA1CA;AA6CA;AAlDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AADA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AADA;AADA;AARA;AADA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AApBA;AAqCA;AA5EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}