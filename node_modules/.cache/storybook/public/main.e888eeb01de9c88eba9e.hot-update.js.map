{"version":3,"file":"main.e888eeb01de9c88eba9e.hot-update.js","sources":["webpack:///./src/components/Food/Food.js","webpack:///./src/components/Meal/Meal.js","webpack:///./src/components/Meal/index.js","webpack:///./src/stories/Meals.stories.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button } from 'reactstrap';\n\nexport const Food = ({ id, name, group, prot, carb, fat, editable }) => {\n  const [_id, setId] = useState(id);\n  const [_name, setName] = useState(name);\n  const [_group, setGroup] = useState(group);\n  const [_prot, setProt] = useState(prot);\n  const [_carb, setCarb] = useState(carb);\n  const [_fat, setFat] = useState(fat);\n  const [cals, setCals] = useState(4 * (prot + carb) + fat * 9);\n  const [isEditable, setIsEditable] = useState(editable);\n  const [isDone, setIsDone] = useState(false);\n\n  useEffect(() => {\n    setId(id);\n    setIsEditable(editable);\n    setName(name);\n    setGroup(group);\n    setProt(prot);\n    setCarb(carb);\n    setFat(fat);\n    setCals((_carb + _prot) * 4 + _fat * 9);\n  }, [editable, fat, carb, prot, group, name, id, _prot, _carb, _fat]);\n\n  const handleOnclickEdit = e => {\n    setIsEditable(true);\n  };\n\n  const handleOnclickDone = e => {\n    setIsEditable(false);\n  };\n\n  return (\n    <tr>\n      <th scope=\"row\">{_id}</th>\n      <td>\n        {isEditable ? (\n          <input value={_name} onChange={event => setName(event.target.value)} />\n        ) : (\n          _name\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <input value={_group} onChange={event => setGroup(event.target.value)} />\n        ) : (\n          _group\n        )}\n      </td>\n      <td>{cals}</td>\n      <td>\n        {isEditable ? (\n          <input value={_prot} onChange={event => setProt(event.target.value)} />\n        ) : (\n          _prot\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <input value={_carb} onChange={event => setCarb(event.target.value)} />\n        ) : (\n          _carb\n        )}\n      </td>\n      <td>\n        {isEditable ? <input value={_fat} onChange={event => setFat(event.target.value)} /> : _carb}\n      </td>\n      <td>\n        <Button\n          color={!isEditable ? 'primary' : 'danger'}\n          onClick={!isEditable ? handleOnclickEdit : handleOnclickDone}\n        >\n          {!isEditable ? 'edit' : 'done'}\n        </Button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row, Table } from 'reactstrap';\nimport { Food } from '../Food/Food';\n\nexport const Meal = ({ editable, foods }) => {\n  const [_foods, setFoods] = useState(foods);\n  const [isEditable, setIsEditable] = useState(editable);\n\n  useEffect(() => {\n    setIsEditable(editable);\n  }, [editable]);\n\n  const handleOnSave = () => {\n    setIsEditable(false);\n  };\n\n  const handleOnAdd = () => {\n    setFoods([..._foods, series.length + 1]);\n  };\n\n  const handleOnDelete = () => {\n    setFoods(_foods.filter(id => id !== _foods.length));\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>This is a {title} size serie</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>name</th>\n              <th>group</th>\n              <th>calories</th>\n              <th>proteins</th>\n              <th>carbohydrates</th>\n              <th>fat</th>\n            </tr>\n          </thead>\n          <tbody>\n            {_foods.map(item => (\n              <Food\n                key={item}\n                id={item}\n                name={item.name}\n                group={item.group}\n                carb={item.carb}\n                prot={item.prot}\n                fat={item.fat}\n                editable={isEditable}\n              ></Food>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Row>\n        <Col xs={8}>\n          <Button color=\"success\" onClick={handleOnSave}>\n            Save\n          </Button>\n        </Col>\n        <Col xs={4}>\n          <Button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </Button>\n          <Button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","export * from './Meal';\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport { Meal } from '../components/Meal';\\n\\nexport default {\\n  title: 'NUTRITION/Meals',\\n  component: Meal,\\n};\\n\\nexport const Breakfast = Meal.bind({});\\n\\n_foods = Breakfast.args = {\\n  foods: [\\n    {\\n      id: 0,\\n      portion: 100,\\n      units: 'g',\\n      name: 'Banana',\\n      group: 'Fruits',\\n      prot: 0.73,\\n      carb: 20.1,\\n      fat: 0.22,\\n    },\\n    {\\n      id: 1,\\n      portion: 100,\\n      units: 'g',\\n      name: 'Chicken',\\n      group: 'Poultry',\\n      prot: 32.11,\\n      carb: 20.1,\\n      fat: 3.24,\\n    },\\n  ],\\n  editable: true,\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Breakfast\":{\"startLoc\":{\"col\":25,\"line\":9},\"endLoc\":{\"col\":38,\"line\":9},\"startBody\":{\"col\":25,\"line\":9},\"endBody\":{\"col\":38,\"line\":9}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Meal } from '../components/Meal';\n\nexport default {\n  title: 'NUTRITION/Meals',\n  component: Meal,\n};\n\nexport const Breakfast = Meal.bind({});\n\n_foods = Breakfast.args = {\n  foods: [\n    {\n      id: 0,\n      portion: 100,\n      units: 'g',\n      name: 'Banana',\n      group: 'Fruits',\n      prot: 0.73,\n      carb: 20.1,\n      fat: 0.22,\n    },\n    {\n      id: 1,\n      portion: 100,\n      units: 'g',\n      name: 'Chicken',\n      group: 'Poultry',\n      prot: 32.11,\n      carb: 20.1,\n      fat: 3.24,\n    },\n  ],\n  editable: true,\n};\n\n\n\nBreakfast.parameters = { storySource: { source: \"Meal.bind({})\" }, ...Breakfast.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAEA;AACA;AAFA;AAAA;AADA;AAlCA;AA4CA;AA3EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAPA;AADA;AAWA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AADA;AAZA;AADA;AA6BA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AAjCA;AAkDA;AAvEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAvBA;AA4BA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}