{"version":3,"file":"main.154c73ea9b1f79f5d958.hot-update.js","sources":["webpack:///./src/components/DeleteConfirmationModal/Modal.js","webpack:///./src/stories/DT.stories.jsx","webpack:///./src/stories/DTChartjs.stories.jsx","webpack:///./src/stories/DTD3.stories.jsx","webpack:///./src/stories/DeleteConfirmationModal.stories.jsx","webpack:///./src/stories/Series.stories.jsx"],"sourcesContent":["import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\n\nexport const DeleteConfirmation = ({ isOpen, toggle, handleConfirm, message }) => {\n  const deleteBy = () => {\n    handleConfirm();\n    toggle();\n  };\n  return (\n    <Modal isOpen={isOpen} toggle={toggle}>\n      <ModalHeader toggle={toggle}>This is my modal</ModalHeader>\n      <ModalBody>{message}</ModalBody>\n      <ModalFooter>\n        <Button color=\"danger\" onClick={deleteBy}>\n          Confirm\n        </Button>{' '}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n  //   return (\n  //     <Modal isOpen={isOpen} toggle={toggle}>\n  //       <ModalHeader\n  //       <ModalBody>\n  //         <div className=\"alert alert-danger\">{message}</div>\n  //       </ModalBody>\n  //       <ModalFooter>\n  //         <Button vacolorriant=\"default\" onClick={toggle}>\n  //           Cancel\n  //         </Button>\n  //         <Button color=\"danger\" onClick={() => confirmModal(type, id)}>\n  //           Delete\n  //         </Button>\n  //       </ModalFooter>\n  //     </Modal>\n  //   );\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Barchart } from '../components/Barchart';\\nimport React from 'react';\\nimport { Col, Container, Row } from 'reactstrap';\\n\\nexport default {\\n  /* üëá The title prop is optional.\\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n   * to learn how to generate automatic titles\\n   */\\n  title: 'DT story',\\n  component: Barchart,\\n};\\n\\nconst data = [\\n  {\\n    client: 'Itau',\\n    past: 150,\\n    actual: 165,\\n  },\\n  {\\n    client: 'Santander',\\n    past: 210,\\n    actual: 190,\\n  },\\n  {\\n    client: 'Avangrid',\\n    past: 222,\\n    actual: 270,\\n  },\\n  {\\n    client: 'IDB Invest',\\n    past: 222,\\n    actual: 270,\\n  },\\n  {\\n    client: 'United Nations',\\n    past: 200,\\n    actual: 235,\\n  },\\n];\\n//   {\\n//     client: 'September',\\n//     past: 280,\\n//     actual: 330,\\n//   },\\n//   {\\n//     client: 'October',\\n//     past: 330,\\n//     actual: 370,\\n//   },\\n//   {\\n//     client: 'November',\\n//     past: 370,\\n//     actual: 190,\\n//   },BarchartD3\\n//   {\\n//     client: 'December',\\n//     past: 350,\\n//     actual: 190,\\n//   },\\n//   {\\n//     client: 'January',\\n//     past: 410,\\n//     actual: 190,\\n//   },\\n//   {\\n//     client: 'February',\\n//     past: 415,\\n//     actual: 190,\\n//   },\\n//   {\\n//     client: 'March',\\n//     past: 475,\\n//     actual: 190,\\n//   },\\n\\nexport const ActualVsBudget = () => {\\n  const style = {\\n    transform: 'rotate(-90deg)',\\n    transition: 'transform 150ms ease', // smooth transition\\n  };\\n  return (\\n    <Container>\\n      <Row>\\n        <Col xs={4} style={style}>\\n          <Barchart data={data} y={10} diff />\\n        </Col>\\n        <Col sm={4} style={style}>\\n          <Barchart data={data} y={0} />\\n        </Col>\\n      </Row>\\n    </Container>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ActualVsBudget\":{\"startLoc\":{\"col\":30,\"line\":77},\"endLoc\":{\"col\":1,\"line\":94},\"startBody\":{\"col\":30,\"line\":77},\"endBody\":{\"col\":1,\"line\":94}}};\n    \nimport { Barchart } from '../components/Barchart';\nimport React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\n\nexport default {\n  /* üëá The title prop is optional.\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'DT story',\n  component: Barchart,\n};\n\nconst data = [\n  {\n    client: 'Itau',\n    past: 150,\n    actual: 165,\n  },\n  {\n    client: 'Santander',\n    past: 210,\n    actual: 190,\n  },\n  {\n    client: 'Avangrid',\n    past: 222,\n    actual: 270,\n  },\n  {\n    client: 'IDB Invest',\n    past: 222,\n    actual: 270,\n  },\n  {\n    client: 'United Nations',\n    past: 200,\n    actual: 235,\n  },\n];\n//   {\n//     client: 'September',\n//     past: 280,\n//     actual: 330,\n//   },\n//   {\n//     client: 'October',\n//     past: 330,\n//     actual: 370,\n//   },\n//   {\n//     client: 'November',\n//     past: 370,\n//     actual: 190,\n//   },BarchartD3\n//   {\n//     client: 'December',\n//     past: 350,\n//     actual: 190,\n//   },\n//   {\n//     client: 'January',\n//     past: 410,\n//     actual: 190,\n//   },\n//   {\n//     client: 'February',\n//     past: 415,\n//     actual: 190,\n//   },\n//   {\n//     client: 'March',\n//     past: 475,\n//     actual: 190,\n//   },\n\nexport const ActualVsBudget = () => {\n  const style = {\n    transform: 'rotate(-90deg)',\n    transition: 'transform 150ms ease', // smooth transition\n  };\n  return (\n    <Container>\n      <Row>\n        <Col xs={4} style={style}>\n          <Barchart data={data} y={10} diff />\n        </Col>\n        <Col sm={4} style={style}>\n          <Barchart data={data} y={0} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\n\n\nActualVsBudget.parameters = { storySource: { source: \"() => {\\n  const style = {\\n    transform: 'rotate(-90deg)',\\n    transition: 'transform 150ms ease', // smooth transition\\n  };\\n  return (\\n    <Container>\\n      <Row>\\n        <Col xs={4} style={style}>\\n          <Barchart data={data} y={10} diff />\\n        </Col>\\n        <Col sm={4} style={style}>\\n          <Barchart data={data} y={0} />\\n        </Col>\\n      </Row>\\n    </Container>\\n  );\\n}\" }, ...ActualVsBudget.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { Container, Row } from 'reactstrap';\\nimport { Barchartjs2 } from '../components/Barchartjs2/Barchartjs2';\\n\\nexport default {\\n  /* üëá The title prop is optional.\\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n   * to learn how to generate automatic titles\\n   */\\n  title: 'DT Barchartjs2 story',\\n  component: Barchartjs2,\\n  argTypes: {\\n    variant: {\\n      options: ['x', 'y'],\\n      control: { type: 'radio' },\\n    },\\n  },\\n};\\n\\nexport const ActualVsBudget = args => {\\n  const data = {\\n    labels: [\\n      'Enel',\\n      'Santander',\\n      'Bradesco',\\n      'Ita√∫',\\n      'Mapfre',\\n      'Bbva',\\n      'Ab Inbev',\\n      'Inter American Development Bank',\\n      'United Nations',\\n      'WorldBank',\\n      'Shell',\\n      'Resolution Life',\\n      'Iberdrola',\\n      'CAF',\\n      'PNC',\\n      'GIA',\\n    ],\\n    datasets: [\\n      {\\n        label: 'FY22',\\n        data: [0.05, 0, 0, 0, 0, 0, 0, 0.75, 0.5, 0.14, 0, 0, 3.1, 0.1, 0, 0],\\n        border: 'rgb(53, 162, 235)',\\n        backgroundColor: 'rgba(53, 162, 235, 0.4)',\\n        hoverBackgroundColor: 'rgb(53, 162, 235)',\\n      },\\n      {\\n        label: 'FY23',\\n        data: [0, 0.75, 0, 0.15, 0, 0.15, 0, 1.3, 0.27, 0.15, 1.3, 0, 5.2, 0.6, 0.2, 0],\\n        border: 'rgb(255, 127, 80)',\\n        backgroundColor: 'rgba(255, 127, 80, 0.4)',\\n        hoverBackgroundColor: 'rgb(255, 127, 80)',\\n      },\\n    ],\\n  };\\n\\n  const options = {\\n    responsive: true,\\n    indexAxis: 'y',\\n    plugins: {\\n      legend: {\\n        position: 'top',\\n      },\\n      title: {\\n        display: true,\\n        text: 'Revenue',\\n      },\\n    },\\n  };\\n  return (\\n    <Container>\\n      <Row>\\n        <Barchartjs2 options={options} data={data} />\\n      </Row>\\n    </Container>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ActualVsBudget\":{\"startLoc\":{\"col\":30,\"line\":20},\"endLoc\":{\"col\":1,\"line\":78},\"startBody\":{\"col\":30,\"line\":20},\"endBody\":{\"col\":1,\"line\":78}}};\n    \nimport React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { Barchartjs2 } from '../components/Barchartjs2/Barchartjs2';\n\nexport default {\n  /* üëá The title prop is optional.\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'DT Barchartjs2 story',\n  component: Barchartjs2,\n  argTypes: {\n    variant: {\n      options: ['x', 'y'],\n      control: { type: 'radio' },\n    },\n  },\n};\n\nexport const ActualVsBudget = args => {\n  const data = {\n    labels: [\n      'Enel',\n      'Santander',\n      'Bradesco',\n      'Ita√∫',\n      'Mapfre',\n      'Bbva',\n      'Ab Inbev',\n      'Inter American Development Bank',\n      'United Nations',\n      'WorldBank',\n      'Shell',\n      'Resolution Life',\n      'Iberdrola',\n      'CAF',\n      'PNC',\n      'GIA',\n    ],\n    datasets: [\n      {\n        label: 'FY22',\n        data: [0.05, 0, 0, 0, 0, 0, 0, 0.75, 0.5, 0.14, 0, 0, 3.1, 0.1, 0, 0],\n        border: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.4)',\n        hoverBackgroundColor: 'rgb(53, 162, 235)',\n      },\n      {\n        label: 'FY23',\n        data: [0, 0.75, 0, 0.15, 0, 0.15, 0, 1.3, 0.27, 0.15, 1.3, 0, 5.2, 0.6, 0.2, 0],\n        border: 'rgb(255, 127, 80)',\n        backgroundColor: 'rgba(255, 127, 80, 0.4)',\n        hoverBackgroundColor: 'rgb(255, 127, 80)',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    indexAxis: 'y',\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Revenue',\n      },\n    },\n  };\n  return (\n    <Container>\n      <Row>\n        <Barchartjs2 options={options} data={data} />\n      </Row>\n    </Container>\n  );\n};\n\n\n\nActualVsBudget.parameters = { storySource: { source: \"args => {\\n  const data = {\\n    labels: [\\n      'Enel',\\n      'Santander',\\n      'Bradesco',\\n      'Ita√∫',\\n      'Mapfre',\\n      'Bbva',\\n      'Ab Inbev',\\n      'Inter American Development Bank',\\n      'United Nations',\\n      'WorldBank',\\n      'Shell',\\n      'Resolution Life',\\n      'Iberdrola',\\n      'CAF',\\n      'PNC',\\n      'GIA',\\n    ],\\n    datasets: [\\n      {\\n        label: 'FY22',\\n        data: [0.05, 0, 0, 0, 0, 0, 0, 0.75, 0.5, 0.14, 0, 0, 3.1, 0.1, 0, 0],\\n        border: 'rgb(53, 162, 235)',\\n        backgroundColor: 'rgba(53, 162, 235, 0.4)',\\n        hoverBackgroundColor: 'rgb(53, 162, 235)',\\n      },\\n      {\\n        label: 'FY23',\\n        data: [0, 0.75, 0, 0.15, 0, 0.15, 0, 1.3, 0.27, 0.15, 1.3, 0, 5.2, 0.6, 0.2, 0],\\n        border: 'rgb(255, 127, 80)',\\n        backgroundColor: 'rgba(255, 127, 80, 0.4)',\\n        hoverBackgroundColor: 'rgb(255, 127, 80)',\\n      },\\n    ],\\n  };\\n\\n  const options = {\\n    responsive: true,\\n    indexAxis: 'y',\\n    plugins: {\\n      legend: {\\n        position: 'top',\\n      },\\n      title: {\\n        display: true,\\n        text: 'Revenue',\\n      },\\n    },\\n  };\\n  return (\\n    <Container>\\n      <Row>\\n        <Barchartjs2 options={options} data={data} />\\n      </Row>\\n    </Container>\\n  );\\n}\" }, ...ActualVsBudget.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { Container, Row } from 'reactstrap';\\nimport { BarChartD3 } from '../components/D3Barchart';\\n\\nexport default {\\n  /* üëá The title prop is optional.\\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n   * to learn how to generate automatic titles\\n   */\\n  title: 'DTD3 story',\\n  component: BarChartD3,\\n};\\n\\nconst data1 = [\\n  { client: 'Itau', year: 2022, budget: 65 },\\n  { client: 'Itau', year: 2023, budget: 165 },\\n  { client: 'Santander', year: 2022, budget: 0 },\\n  { client: 'Santander', year: 2023, budget: 145 },\\n  { client: 'PNC', year: 2022, budget: 0 },\\n  { client: 'PNC', year: 2023, budget: 85 },\\n];\\n\\nconst data2 = [\\n  { year: 1980, efficiency: 24.3, sales: 8949000 },\\n  { year: 1985, efficiency: 27.6, sales: 10979000 },\\n  { year: 1990, efficiency: 28, sales: 9303000 },\\n  { year: 1991, efficiency: 28.4, sales: 8185000 },\\n  { year: 1992, efficiency: 27.9, sales: 8213000 },\\n  { year: 1993, efficiency: 28.4, sales: 8518000 },\\n  { year: 1994, efficiency: 28.3, sales: 8991000 },\\n  { year: 1995, efficiency: 28.6, sales: 8620000 },\\n  { year: 1996, efficiency: 28.5, sales: 8479000 },\\n  { year: 1997, efficiency: 28.7, sales: 8217000 },\\n  { year: 1998, efficiency: 28.8, sales: 8085000 },\\n  { year: 1999, efficiency: 28.3, sales: 8638000 },\\n  { year: 2000, efficiency: 28.5, sales: 8778000 },\\n  { year: 2001, efficiency: 28.8, sales: 8352000 },\\n  { year: 2002, efficiency: 29, sales: 8042000 },\\n  { year: 2003, efficiency: 29.5, sales: 7556000 },\\n  { year: 2004, efficiency: 29.5, sales: 7483000 },\\n  { year: 2005, efficiency: 30.3, sales: 7660000 },\\n  { year: 2006, efficiency: 30.1, sales: 7762000 },\\n  { year: 2007, efficiency: 31.2, sales: 7562000 },\\n  { year: 2008, efficiency: 31.5, sales: 6769000 },\\n  { year: 2009, efficiency: 32.9, sales: 5402000 },\\n  { year: 2010, efficiency: 33.9, sales: 5636000 },\\n  { year: 2011, efficiency: 33.1, sales: 6093000 },\\n  { year: 2012, efficiency: 35.3, sales: 7245000 },\\n  { year: 2013, efficiency: 36.4, sales: 7586000 },\\n  { year: 2014, efficiency: 36.5, sales: 7708000 },\\n  { year: 2015, efficiency: 37.2, sales: 7517000 },\\n  { year: 2016, efficiency: 37.7, sales: 6873000 },\\n  { year: 2017, efficiency: 39.4, sales: 6081000 },\\n];\\n\\nexport const ActualVsBudgetD3 = () => {\\n  const data = data1.map(d => {\\n    return { attr: d.client, metric: d.budget, date: d.year };\\n  });\\n  console.log(data);\\n  return (\\n    <Container>\\n      <Row>\\n        <BarChartD3 data={data} />\\n      </Row>\\n    </Container>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ActualVsBudgetD3\":{\"startLoc\":{\"col\":32,\"line\":56},\"endLoc\":{\"col\":1,\"line\":68},\"startBody\":{\"col\":32,\"line\":56},\"endBody\":{\"col\":1,\"line\":68}}};\n    \nimport React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { BarChartD3 } from '../components/D3Barchart';\n\nexport default {\n  /* üëá The title prop is optional.\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'DTD3 story',\n  component: BarChartD3,\n};\n\nconst data1 = [\n  { client: 'Itau', year: 2022, budget: 65 },\n  { client: 'Itau', year: 2023, budget: 165 },\n  { client: 'Santander', year: 2022, budget: 0 },\n  { client: 'Santander', year: 2023, budget: 145 },\n  { client: 'PNC', year: 2022, budget: 0 },\n  { client: 'PNC', year: 2023, budget: 85 },\n];\n\nconst data2 = [\n  { year: 1980, efficiency: 24.3, sales: 8949000 },\n  { year: 1985, efficiency: 27.6, sales: 10979000 },\n  { year: 1990, efficiency: 28, sales: 9303000 },\n  { year: 1991, efficiency: 28.4, sales: 8185000 },\n  { year: 1992, efficiency: 27.9, sales: 8213000 },\n  { year: 1993, efficiency: 28.4, sales: 8518000 },\n  { year: 1994, efficiency: 28.3, sales: 8991000 },\n  { year: 1995, efficiency: 28.6, sales: 8620000 },\n  { year: 1996, efficiency: 28.5, sales: 8479000 },\n  { year: 1997, efficiency: 28.7, sales: 8217000 },\n  { year: 1998, efficiency: 28.8, sales: 8085000 },\n  { year: 1999, efficiency: 28.3, sales: 8638000 },\n  { year: 2000, efficiency: 28.5, sales: 8778000 },\n  { year: 2001, efficiency: 28.8, sales: 8352000 },\n  { year: 2002, efficiency: 29, sales: 8042000 },\n  { year: 2003, efficiency: 29.5, sales: 7556000 },\n  { year: 2004, efficiency: 29.5, sales: 7483000 },\n  { year: 2005, efficiency: 30.3, sales: 7660000 },\n  { year: 2006, efficiency: 30.1, sales: 7762000 },\n  { year: 2007, efficiency: 31.2, sales: 7562000 },\n  { year: 2008, efficiency: 31.5, sales: 6769000 },\n  { year: 2009, efficiency: 32.9, sales: 5402000 },\n  { year: 2010, efficiency: 33.9, sales: 5636000 },\n  { year: 2011, efficiency: 33.1, sales: 6093000 },\n  { year: 2012, efficiency: 35.3, sales: 7245000 },\n  { year: 2013, efficiency: 36.4, sales: 7586000 },\n  { year: 2014, efficiency: 36.5, sales: 7708000 },\n  { year: 2015, efficiency: 37.2, sales: 7517000 },\n  { year: 2016, efficiency: 37.7, sales: 6873000 },\n  { year: 2017, efficiency: 39.4, sales: 6081000 },\n];\n\nexport const ActualVsBudgetD3 = () => {\n  const data = data1.map(d => {\n    return { attr: d.client, metric: d.budget, date: d.year };\n  });\n  console.log(data);\n  return (\n    <Container>\n      <Row>\n        <BarChartD3 data={data} />\n      </Row>\n    </Container>\n  );\n};\n\n\n\nActualVsBudgetD3.parameters = { storySource: { source: \"() => {\\n  const data = data1.map(d => {\\n    return { attr: d.client, metric: d.budget, date: d.year };\\n  });\\n  console.log(data);\\n  return (\\n    <Container>\\n      <Row>\\n        <BarChartD3 data={data} />\\n      </Row>\\n    </Container>\\n  );\\n}\" }, ...ActualVsBudgetD3.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useState } from 'react';\\nimport { Button, Container } from 'reactstrap';\\nimport { DeleteConfirmation } from '../components/DeleteConfirmationModal';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\n\\nexport default {\\n  /* üëá The title prop is optional.\\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n   * to learn how to generate automatic titles\\n   */\\n  title: 'People Analytics story',\\n  component: DeleteConfirmation,\\n};\\n\\nexport const DeleteConfirmationStory = () => {\\n  const [isOpen, setIsOpen] = useState(false);\\n  const [message, setMessage] = useState('Are you sure you want to delete');\\n  return (\\n    <Container>\\n      <DeleteConfirmation\\n        isOpen={isOpen}\\n        toggle={e => setIsOpen(!isOpen)}\\n        message={message}\\n        handleConfirm={e => alert('Deleted ')}\\n      ></DeleteConfirmation>\\n      <Button color=\\\"danger\\\" onClick={e => setIsOpen(!isOpen)}>\\n        Delete\\n      </Button>\\n    </Container>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"DeleteConfirmationStory\":{\"startLoc\":{\"col\":39,\"line\":15},\"endLoc\":{\"col\":1,\"line\":31},\"startBody\":{\"col\":39,\"line\":15},\"endBody\":{\"col\":1,\"line\":31}}};\n    \nimport React, { useState } from 'react';\nimport { Button, Container } from 'reactstrap';\nimport { DeleteConfirmation } from '../components/DeleteConfirmationModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default {\n  /* üëá The title prop is optional.\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'People Analytics story',\n  component: DeleteConfirmation,\n};\n\nexport const DeleteConfirmationStory = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState('Are you sure you want to delete');\n  return (\n    <Container>\n      <DeleteConfirmation\n        isOpen={isOpen}\n        toggle={e => setIsOpen(!isOpen)}\n        message={message}\n        handleConfirm={e => alert('Deleted ')}\n      ></DeleteConfirmation>\n      <Button color=\"danger\" onClick={e => setIsOpen(!isOpen)}>\n        Delete\n      </Button>\n    </Container>\n  );\n};\n\n\n\nDeleteConfirmationStory.parameters = { storySource: { source: \"() => {\\n  const [isOpen, setIsOpen] = useState(false);\\n  const [message, setMessage] = useState('Are you sure you want to delete');\\n  return (\\n    <Container>\\n      <DeleteConfirmation\\n        isOpen={isOpen}\\n        toggle={e => setIsOpen(!isOpen)}\\n        message={message}\\n        handleConfirm={e => alert('Deleted ')}\\n      ></DeleteConfirmation>\\n      <Button color=\\\"danger\\\" onClick={e => setIsOpen(!isOpen)}>\\n        Delete\\n      </Button>\\n    </Container>\\n  );\\n}\" }, ...DeleteConfirmationStory.parameters };","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { Serie } from '../components/Serie';\n\nexport default {\n  title: 'Series',\n  component: Serie,\n};\n\nexport const SeriesTest = (\n    <Container>\n      <Row>\n        <Serie exerciseName={\"This is the first exercise\"} numReps={5}/>\n      </Row>\n    </Container>\n) "],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAjBA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAkBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AA1DA;AA8DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAhBA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}