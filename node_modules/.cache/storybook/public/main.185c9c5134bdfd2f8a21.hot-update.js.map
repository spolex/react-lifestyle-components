{"version":3,"file":"main.185c9c5134bdfd2f8a21.hot-update.js","sources":["webpack:///./src/components/Calendar/MonthView.js","webpack:///./src/components/Calendar/index.js","webpack:///./src/stories/Month.stories.jsx"],"sourcesContent":["import Moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\nconst moment = extendMoment(Moment);\nimport { useEffect, useState } from 'react';\n\nexport const MonthView = ({ firstDay, endDay, onCellClick }) => {\n  const [weeksRange, setWeeksRange] = useState(\n    Array.from(moment.range(firstDay, endDay).by('week')),\n  );\n  const [currentMonth, setCurrentMonth] = useState(firstDay.format('MM'));\n\n  useEffect(() => {}, []);\n\n  return (\n    <div className=\"table-responsive\">\n      <h5>{firstDay.format('MMMM')}</h5>\n      <table className=\"table table-hover table-bordered table-sm\">\n        <thead>\n          <tr>\n            {moment.weekdays().map(weekDay => (\n              <th key={weekDay} className=\"days-of-week\">\n                {weekDay}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {weeksRange.map(week => {\n            var daysRange = Array.from(\n              moment.range(week.startOf('week').toDate(), week.endOf('week').toDate()).by('day'),\n            );\n\n            return (\n              <tr>\n                {daysRange.map(d => (\n                  <td\n                    data-value={d.format()}\n                    className={d.format('MM') != currentMonth ? 'text-secondary' : 'text-body'}\n                    onClick={e => onCellClick(e.target.dataset.value)}\n                  >\n                    {d.format('DD')}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","export * from './MonthView';\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport moment from 'moment/moment';\\nimport { MonthView } from '../components/Calendar';\\n\\nexport default {\\n  title: 'COMPONENTS/Month',\\n  component: MonthView,\\n};\\n\\nconst Template = args => <MonthView {...args}></MonthView>;\\n\\n//ðŸ‘‡ Each story then reuses that template\\nexport const Month = Template.bind({});\\nMonth.args = {\\n  firstDay: moment(new Date()).startOf('month'),\\n  endDay: moment(new Date()).endOf('month'),\\n  onCellClick: value => console.log(value),\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Month\":{\"startLoc\":{\"col\":17,\"line\":10},\"endLoc\":{\"col\":58,\"line\":10},\"startBody\":{\"col\":17,\"line\":10},\"endBody\":{\"col\":58,\"line\":10}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment/moment';\nimport { MonthView } from '../components/Calendar';\n\nexport default {\n  title: 'COMPONENTS/Month',\n  component: MonthView,\n};\n\nconst Template = args => <MonthView {...args}></MonthView>;\n\n//ðŸ‘‡ Each story then reuses that template\nexport const Month = Template.bind({});\nMonth.args = {\n  firstDay: moment(new Date()).startOf('month'),\n  endDay: moment(new Date()).endOf('month'),\n  onCellClick: value => console.log(value),\n};\n\n\n\nMonth.parameters = { storySource: { source: \"args => <MonthView {...args}></MonthView>\" }, ...Month.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AADA;AADA;AASA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AADA;AADA;AAYA;AAnBA;AAVA;AAFA;AAoCA;AA7CA;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}