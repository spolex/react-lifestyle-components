{"version":3,"file":"main.139e257ea8ee0200cf7e.hot-update.js","sources":["webpack:///./src/components/Checkmark/Checkmark.js","webpack:///./src/components/Repetition/Repe.js","webpack:///./src/components/Serie/Serie.js","webpack:///./src/stories/Series.stories.jsx"],"sourcesContent":["// Ported from Alexander Haniotis' code here: https://codepen.io/haniotis/pen/KwvYLO\nimport React from \"react\";\n\nexport const Checkmark = () => {\n  return (\n    <svg \n      className=\"checkmark\"\n      viewBox=\"0 0 52 52\">\n        <circle \n          className=\"checkmark__circle\" \n          cx=\"26\" \n          cy=\"26\"\n          r=\"25\" \n          fill=\"none\"\n        />\n        <path \n          className=\"checkmark__check\" \n          fill=\"none\" \n          d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n        />\n    </svg>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { Checkmark } from '../Checkmark/Checkmark';\n\nexport const Repe = ({ id, pNum, pWeigth, editable }) => {\n  const [weigth, setWeigth] = useState(pWeigth);\n  const [num, setNum] = useState(pNum);\n  const [isEditable, setIsEditable] = useState(editable);\n\n  useEffect(() => {\n    setIsEditable(editable);\n    setWeigth(pWeigth);\n    setNum(pNum);\n  }, [editable, pWeigth, pNum]);\n\n  const handleOnclickEdit = e => {\n    setIsEditable(!isEditable);\n  };\n\n  return (\n    <tr>\n      <th scope=\"row\">{id}</th>\n      <td>\n        {isEditable ? <input value={num} onChange={event => setNum(event.target.value)} /> : num}\n      </td>\n      <td>\n        {isEditable ? (\n          <input value={weigth} onChange={event => setWeigth(event.target.value)} />\n        ) : (\n          weigth\n        )}\n      </td>\n      <td>\n        {!isEditable ? (\n          <Button color=\"primary\" onClick={handleOnclickEdit}>\n            edit\n          </Button>\n        ) : (\n          ''\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <Button color=\"danger\" onClick={handleOnclickEdit}>\n            done\n          </Button>\n        ) : (\n          ''\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Container, Row, Table } from 'reactstrap';\nimport { Repe } from '../Repetition/Repe';\n\nexport const Serie = ({ pNumSeries, reps, editable, size, pWeigth }) => {\n  const [numSeries, setNumSeries] = useState(Array.from(Array(reps).keys()));\n  const [isEditable, setIsEditable] = useState(editable);\n  const [weight, setWeigth] = useState(pWeigth);\n  const [numRepes, setNumRepes] = useState(pWeigth);\n  const [title, setTitle] = useState(size);\n\n  useEffect(() => {\n    setIsEditable(editable);\n    setRepes(Array.from(Array(reps).keys()));\n    setWeigth(pWeigth);\n  }, [editable, reps, pWeigth, size]);\n\n  const handleOnSave = () => {\n    alert('Saved!!');\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>This is a {title} size serie</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>#repetitions</th>\n              <th>weight</th>\n            </tr>\n          </thead>\n          <tbody>\n            {repes.map(r => (\n              <Repe key={r} id={r} pNum={3} pWeigth={weight} editable={editable}></Repe>\n            ))}\n          </tbody>\n        </Table>\n        <Button onClick={handleOnSave}>Save</Button>\n      </Row>\n    </Container>\n  );\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport React from 'react';\\nimport { Container, Row } from 'reactstrap';\\nimport { Serie } from '../components/Serie';\\n\\nexport default {\\n  title: 'WORKOUT/Series',\\n  component: Serie,\\n};\\n\\nexport const SeriesStory = ({ reps, size, isEditable, weigth }) => {\\n  return <Serie reps={reps} isEditable={isEditable} size={size} pWeigth={weigth} />;\\n};\\n\\nexport const Small = Serie.bind({});\\nSmall.args = {\\n  reps: 8,\\n  weigth: 100,\\n  size: 's',\\n  isEditable: true,\\n};\\n\\nexport const Medium = Serie.bind({});\\nMedium.args = {\\n  reps: 10,\\n  weigth: 90,\\n  size: 'm',\\n  isEditable: true,\\n};\\n\\nexport const Large = Serie.bind({});\\nLarge.args = {\\n  reps: 12,\\n  weigth: 85,\\n  size: 'l',\\n  isEditable: true,\\n};\\n\\nexport const Extra = Serie.bind({});\\nExtra.args = {\\n  reps: 15,\\n  weigth: 80,\\n  size: 'xl',\\n  isEditable: true,\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"SeriesStory\":{\"startLoc\":{\"col\":27,\"line\":11},\"endLoc\":{\"col\":1,\"line\":13},\"startBody\":{\"col\":27,\"line\":11},\"endBody\":{\"col\":1,\"line\":13}},\"Small\":{\"startLoc\":{\"col\":21,\"line\":15},\"endLoc\":{\"col\":35,\"line\":15},\"startBody\":{\"col\":21,\"line\":15},\"endBody\":{\"col\":35,\"line\":15}},\"Medium\":{\"startLoc\":{\"col\":22,\"line\":23},\"endLoc\":{\"col\":36,\"line\":23},\"startBody\":{\"col\":22,\"line\":23},\"endBody\":{\"col\":36,\"line\":23}},\"Large\":{\"startLoc\":{\"col\":21,\"line\":31},\"endLoc\":{\"col\":35,\"line\":31},\"startBody\":{\"col\":21,\"line\":31},\"endBody\":{\"col\":35,\"line\":31}},\"Extra\":{\"startLoc\":{\"col\":21,\"line\":39},\"endLoc\":{\"col\":35,\"line\":39},\"startBody\":{\"col\":21,\"line\":39},\"endBody\":{\"col\":35,\"line\":39}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { Serie } from '../components/Serie';\n\nexport default {\n  title: 'WORKOUT/Series',\n  component: Serie,\n};\n\nexport const SeriesStory = ({ reps, size, isEditable, weigth }) => {\n  return <Serie reps={reps} isEditable={isEditable} size={size} pWeigth={weigth} />;\n};;\n\nexport const Small = Serie.bind({});;\nSmall.args = {\n  reps: 8,\n  weigth: 100,\n  size: 's',\n  isEditable: true,\n};\n\nexport const Medium = Serie.bind({});;\nMedium.args = {\n  reps: 10,\n  weigth: 90,\n  size: 'm',\n  isEditable: true,\n};\n\nexport const Large = Serie.bind({});;\nLarge.args = {\n  reps: 12,\n  weigth: 85,\n  size: 'l',\n  isEditable: true,\n};\n\nexport const Extra = Serie.bind({});\nExtra.args = {\n  reps: 15,\n  weigth: 80,\n  size: 'xl',\n  isEditable: true,\n};\n\n\n\nSeriesStory.parameters = { storySource: { source: \"({ reps, size, isEditable, weigth }) => {\\n  return <Serie reps={reps} isEditable={isEditable} size={size} pWeigth={weigth} />;\\n}\" }, ...SeriesStory.parameters };\nSmall.parameters = { storySource: { source: \"Serie.bind({})\" }, ...Small.parameters };\nMedium.parameters = { storySource: { source: \"Serie.bind({})\" }, ...Medium.parameters };\nLarge.parameters = { storySource: { source: \"Serie.bind({})\" }, ...Large.parameters };\nExtra.parameters = { storySource: { source: \"Serie.bind({})\" }, ...Extra.parameters };"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AAEA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAVA;AAiBA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AAAA;AAAA;AAAA;AAFA;AASA;AAEA;AAAA;AAAA;AAAA;AAFA;AArBA;AAgCA;AAhDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AARA;AAcA;AAAA;AAAA;AAfA;AAJA;AAuBA;AAzsourceRoot":""}