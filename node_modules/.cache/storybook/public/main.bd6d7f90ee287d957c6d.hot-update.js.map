{"version":3,"file":"main.bd6d7f90ee287d957c6d.hot-update.js","sources":["webpack:///./src/components/Serie/Serie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Container, Row, Table } from 'reactstrap';\nimport { Rep } from '../Repetition/Rep';\n\nexport const Serie = ({ numSeries, numReps, editable, size, weigth }) => {\n  const [series, setSeries] = useState(Array.from(Array(numSeries).keys()));\n  const [isEditable, setIsEditable] = useState(editable);\n  const [_weigth, setWeigth] = useState(weigth);\n  const [_numReps, setNumReps] = useState(numReps);\n  const [title, setTitle] = useState(size);\n\n  useEffect(() => {\n    setIsEditable(editable);\n    console.log(numSeries);\n    setSeries(Array.from(Array(numSeries).keys()));\n    console.log(series);\n    setWeigth(weigth);\n    setNumReps(numReps);\n  }, [editable, numSeries, numReps, weigth, size]);\n\n  const handleOnSave = () => {\n    alert('Saved!!');\n  };\n\n  const handleOnAdd = () => {\n    setSeries([...series, series.length + 1]);\n  };\n\n  const handleOnDelete = () => {\n    setSeries((current) =>\n      current.filter((fruit) => fruit.id !== 2)\n    );\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>This is a {title} size serie</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>#repetitions</th>\n              <th>weight</th>\n            </tr>\n          </thead>\n          <tbody>\n            {series.map(r => (\n              <Rep key={r} id={r} numReps={_numReps} weigth={_weigth} editable={isEditable}></Rep>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Button color=\"primary\" onClick={handleOnAdd}>\n        +\n      </Button>\n      <Button color=\"danger\" onClick={handleOnDelete}>\n        -\n      </Button>\n      <Button color=\"success\" onClick={handleOnSave}>\n        Save\n      </Button>\n    </Container>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AARA;AADA;AAgBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AA1BA;AA+BA;AA9DA;;;;;;;;;;;;;;;;;A","sourceRoot":""}