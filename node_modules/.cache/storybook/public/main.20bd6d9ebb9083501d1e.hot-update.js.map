{"version":3,"file":"main.20bd6d9ebb9083501d1e.hot-update.js","sources":["webpack:///./src/components/Repetition/Rep.js","webpack:///./src/components/Serie/Serie.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Button, Input } from 'reactstrap';\n\nexport const Rep = ({ item, onItemChange }) => {\n  useEffect(() => {}, []);\n\n  return (\n    <tr>\n      <th scope=\"row\">{item[0]}</th>\n      <td>\n        {item.editable ? (\n          <Input\n            type={item.num.type}\n            value={item.num.value}\n            onChange={event =>\n              onItemChange({ ...item, num: { ...num, value: event.target.value } })\n            }\n          />\n        ) : (\n          item.num.value\n        )}\n      </td>\n      <td>\n        {item.editable ? (\n          <Input\n            type={item.weigth.type}\n            value={item.weigth.value}\n            onChange={event =>\n              onItemChange({ ...item, weigth: { ...weigth, value: event.target.value } })\n            }\n          />\n        ) : (\n          item.weigth.value\n        )}\n      </td>\n      <td>\n        {/* <Button\n          color={!item.editable ? 'primary' : 'danger'}\n          onClick={\n            !item.editable\n              ? onItemChange({ ...item, editable: true })\n              : onItemChange({ ...item, editable: false })\n          }\n        >\n          {!item.editable ? 'edit' : 'done'}\n        </Button> */}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row, Table } from 'reactstrap';\nimport { Rep } from '../Repetition/Rep';\n\nexport const Serie = ({ title, data, min, max }) => {\n  const [_data, setData] = useState(data);\n  const [_max, setMin] = useState(max);\n  const [_min, setMax] = useState(min);\n\n  useEffect(() => {\n    setData(\n      _data.map(item => {\n        return { ...item, editable: true };\n      }),\n    );\n  }, []);\n\n  const handleOnSave = () => {\n    console.log('saving');\n  };\n\n  const handleOnAdd = () => {\n    if (_data.length < _max) {\n      console.log('entro');\n      setData([\n        ..._data,\n        {\n          id: {value:_data.length + 1, type: _data[0].id.type},\n          num: { value: 0, type: _data[0].num.type },\n          weigth: { value: 0, type: data[0].weigth.type },\n          editable: true,\n        },\n      ]);\n    } else console.log('That is the max!!!');\n  };\n\n  const handleOnDelete = () => {\n    if (_data.length > _min) {\n      setData(_data.filter(item => item.id !== _data.length));\n    } else console.log('That is the min!!!');\n  };\n\n  const onItemChange = item => {\n    setData(\n      _data.map(serie => {\n        if (serie.id === item.id) {\n          return item;\n        }\n        return serie;\n      }),\n    );\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>{title}</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              {Object.keys(data[0]).map(c => (\n                <th key={c}>{c}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {_data.map(item => (\n              <Rep key={item.id} item={item} onItemChange={onItemChange}></Rep>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Row>\n        <Col xs={8}>\n          <Button color=\"success\" onClick={handleOnSave}>\n            Save\n          </Button>\n        </Col>\n        <Col xs={4}>\n          <Button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </Button>\n          <Button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAHA;AAFA;AAaA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAHA;AAFA;AAfA;AA0CA;AA9CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AADA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AADA;AADA;AARA;AADA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AApBA;AAqCA;AAvFA;;;;;;;;;;;;;;;;;A","sourceRoot":""}