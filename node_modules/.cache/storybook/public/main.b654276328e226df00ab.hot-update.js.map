{"version":3,"file":"main.b654276328e226df00ab.hot-update.js","sources":["webpack:///./src/components/Barchart/index.js","webpack:///./src/components/Chart/Chart.js","webpack:///./src/stories/DT.stories.jsx"],"sourcesContent":["import { Bar, Chart } from '../Chart/Chart';\n\nexport * from './Barchart';\n// import { Chart, Bar } from './Chart';\n\nexport const Barchart = ({ data }) => {\n  // Width of each bar\n  const itemWidth = 20;\n\n  //   // Distance between each bar\n  const itemMargin = 5;\n\n  const dataLength = data.length;\n\n  //   // Normalize data, we'll reduce all sizes to 25% of their original value\n  const massagedData = data.map(datum => Object.assign({}, datum, { repos: datum.repos * 0.25 }));\n  window.massagedData = massagedData;\n\n  const mostRepos = massagedData.reduce((acc, cur) => {\n    const { repos } = cur;\n    return repos > acc ? repos : acc;\n  }, 0);\n  window.mostRepos = massagedData;\n\n  const chartHeight = mostRepos;\n\n  return (\n    <div>\n      <Chart width={dataLength * (itemWidth + itemMargin)} height={chartHeight}>\n        {massagedData.map((datum, index) => (\n          <Bar\n            key={datum.name}\n            x={index * (itemWidth + itemMargin)}\n            y={0}\n            width={itemWidth}\n            height={datum.repos}\n          />\n        ))}\n      </Chart>\n    </div>\n  );\n};\n","export const Chart = ({ children, width, height }) => (\n  <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n    {children}\n  </svg>\n);\n\nexport const Bar = ({ x, y, width, height }) => <rect x={x} y={y} width={width} height={height} />;\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Barchart } from '../components/Barchart';\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n   * to learn how to generate automatic titles\\n   */\\n  title: 'DT story',\\n  component: Barchart,\\n};\\n\\nconst data = [\\n  {\\n    name: 'kentcdodds',\\n    repos: 371,\\n  },\\n  {\\n    name: 'sindresorhus',\\n    repos: 909,\\n  },\\n  {\\n    name: 'developit',\\n    repos: 222,\\n  },\\n  {\\n    name: 'getify',\\n    repos: 43,\\n  },\\n  {\\n    name: 'btholt',\\n    repos: 56,\\n  },\\n  {\\n    name: 'kyleshevlin',\\n    repos: 82,\\n  },\\n];\\n\\nexport const DTStory = () => {};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"DTStory\":{\"startLoc\":{\"col\":23,\"line\":39},\"endLoc\":{\"col\":31,\"line\":39},\"startBody\":{\"col\":23,\"line\":39},\"endBody\":{\"col\":31,\"line\":39}}};\n    \nimport { Barchart } from '../components/Barchart';\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n   * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'DT story',\n  component: Barchart,\n};\n\nconst data = [\n  {\n    name: 'kentcdodds',\n    repos: 371,\n  },\n  {\n    name: 'sindresorhus',\n    repos: 909,\n  },\n  {\n    name: 'developit',\n    repos: 222,\n  },\n  {\n    name: 'getify',\n    repos: 43,\n  },\n  {\n    name: 'btholt',\n    repos: 56,\n  },\n  {\n    name: 'kyleshevlin',\n    repos: 82,\n  },\n];\n\nexport const DTStory = () => {};\n\n\n\nDTStory.parameters = { storySource: { source: \"() => {}\" }, ...DTStory.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AALA;AADA;AADA;AADA;AAcA;AApCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAIA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}