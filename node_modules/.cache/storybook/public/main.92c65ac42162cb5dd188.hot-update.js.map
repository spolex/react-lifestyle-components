{"version":3,"file":"main.92c65ac42162cb5dd188.hot-update.js","sources":["webpack:///./src/components/Repetition/Repe.js","webpack:///./src/components/Serie/Serie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { Checkmark } from '../Checkmark/Checkmark';\n\nexport const Repe = ({ id, pNum, pWeigth, editable }) => {\n  const [weigth, setWeigth] = useState();\n  const [num, setNum] = useState();\n  const [isEditable, setIsEditable] = useState(editable);\n\n  useEffect(() => {\n    setIsEditable(editable);\n    setWeigth(pWeigth);\n    setNum(pNum);\n  }, [editable, pWeigth, pNum]);\n\n  const handleOnclickEdit = e => {\n    setIsEditable(!isEditable);\n  };\n\n  return (\n    <tr>\n      <th scope=\"row\">{id}</th>\n      <td>\n        {isEditable ? <input value={num} onChange={event => setNum(event.target.value)} /> : num}\n      </td>\n      <td>\n        {isEditable ? (\n          <input value={weigth} onChange={event => setWeigth(event.target.value)} />\n        ) : (\n          weigth\n        )}\n      </td>\n      <td>\n        {!isEditable ? (\n          <Button color=\"primary\" onClick={handleOnclickEdit}>\n            edit\n          </Button>\n        ) : (\n          ''\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <Button color=\"danger\" onClick={handleOnclickEdit}>\n            done\n          </Button>\n        ) : (\n          ''\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Container, Row, Table } from 'reactstrap';\nimport { Repe } from '../Repetition/Repe';\n\nexport const Serie = ({ reps, editable, size, pWeigth }) => {\n  const [repes, setRepes] = useState(Array.from(Array(reps).keys()));\n  const [isEditable, setIsEditable] = useState(editable);\n  const [weight, setWeigth] = useState(pWeigth);\n  const [title, setTitle] = useState(size);\n\n  useEffect(() => {\n    setIsEditable(editable);\n    setRepes(Array.from(Array(reps).keys()));\n    setWeigth(pWeigth);\n  }, [editable, reps, pWeigth, size]);\n\n  const handleOnSave = () => {\n    alert('Saved!!');\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>This is a {title} size serie</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>#repetitions</th>\n              <th>weight</th>\n            </tr>\n          </thead>\n          <tbody>\n            {repes.map(r => (\n              <Repe key={r} id={r} pNum={3} pWeigth={weight} editable={editable}></Repe>\n            ))}\n          </tbody>\n        </Table>\n        <Button onClick={handleOnSave}>Save</Button>\n      </Row>\n    </Container>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AAAA;AAAA;AAAA;AAFA;AASA;AAEA;AAAA;AAAA;AAAA;AAFA;AArBA;AAgCA;AAhDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AARA;AAcA;AAAA;AAAA;AAfA;AAJA;AAuBA;AAxCA;;;;;;;;;;;;;;;;;A","sourceRoot":""}