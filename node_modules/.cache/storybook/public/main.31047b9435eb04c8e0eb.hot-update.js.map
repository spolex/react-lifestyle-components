{"version":3,"file":"main.31047b9435eb04c8e0eb.hot-update.js","sources":["webpack:///./src/stories/Table.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport { TTable } from '../components/TTable';\\n\\nexport default {\\n  title: 'WORKOUT/Series',\\n  component: TTable,\\n};\\n\\nconst Template = args => {\\n  const handleOnAdd = () => {\\n    if (data.length < max) {\\n      setData([\\n        ...data,\\n        { ...data[data.length - 1], id: { value: data.length + 1 }, editable: { value: true } },\\n      ]);\\n    } else console.log('That is the max!!!');\\n  };\\n\\n  const handleOnDelete = () => {\\n    if (data.length > min) {\\n      setData(data.filter(item => item.id.value !== data.length));\\n    } else console.log('That is the min!!!');\\n  };\\n\\n  const onItemChange = item => {\\n    console.log(item);\\n    setData(\\n      data.map(serie => {\\n        if (serie.id.value === item.id.value) {\\n          return item;\\n        }\\n        return serie;\\n      }),\\n    );\\n  };\\n\\n  return <TTable handleOnAdd={handleOnAdd} handleOnSave={handleOnSave} handleOnDelete={hand} {...args} />;\\n};\\n\\nexport const Monday = Template.bind({});\\nMonday.args = {\\n  title: 'Curl biceps',\\n  muscleGroup: 'Biceps',\\n  data: [\\n    {\\n      id: { value: 1 },\\n      num: { value: 15, type: 'number' },\\n      weigth: { value: 100, type: 'number' },\\n    },\\n    {\\n      id: { value: 2 },\\n      num: { value: 10, type: 'number' },\\n      weigth: { value: 8, type: 'number' },\\n    },\\n  ],\\n  min: 2,\\n  max: 5,\\n};\\n\\nexport const Breakfast = Template.bind({});\\n\\nBreakfast.args = {\\n  title: 'Meal1',\\n  data: [\\n    {\\n      id: { value: 1 },\\n      name: { value: 'Banana', type: 'text' },\\n      group: { value: 'Fruits', type: 'text' },\\n      portion: { value: 100, type: 'number' },\\n      units: { value: 'g', editable: false },\\n      prot: { value: 0.73, type: 'number' },\\n      carb: { value: 20.1, type: 'number' },\\n      fat: { value: 0.22, type: 'number' },\\n    },\\n    {\\n      id: { value: 2 },\\n      name: { value: 'Chicken', type: 'text' },\\n      group: { value: 'Poultry', type: 'text' },\\n      portion: { value: 100, type: 'number' },\\n      units: { value: 'g', editable: false },\\n      prot: { value: 32.11, type: 'number' },\\n      carb: { value: 20.1, type: 'number' },\\n      fat: { value: 3.24, type: 'number' },\\n    },\\n  ],\\n  min: 1,\\n  max: 10,\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Monday\":{\"startLoc\":{\"col\":17,\"line\":9},\"endLoc\":{\"col\":1,\"line\":38},\"startBody\":{\"col\":17,\"line\":9},\"endBody\":{\"col\":1,\"line\":38}},\"Breakfast\":{\"startLoc\":{\"col\":17,\"line\":9},\"endLoc\":{\"col\":1,\"line\":38},\"startBody\":{\"col\":17,\"line\":9},\"endBody\":{\"col\":1,\"line\":38}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { TTable } from '../components/TTable';\n\nexport default {\n  title: 'WORKOUT/Series',\n  component: TTable,\n};\n\nconst Template = args => {\n  const handleOnAdd = () => {\n    if (data.length < max) {\n      setData([\n        ...data,\n        { ...data[data.length - 1], id: { value: data.length + 1 }, editable: { value: true } },\n      ]);\n    } else console.log('That is the max!!!');\n  };\n\n  const handleOnDelete = () => {\n    if (data.length > min) {\n      setData(data.filter(item => item.id.value !== data.length));\n    } else console.log('That is the min!!!');\n  };\n\n  const onItemChange = item => {\n    console.log(item);\n    setData(\n      data.map(serie => {\n        if (serie.id.value === item.id.value) {\n          return item;\n        }\n        return serie;\n      }),\n    );\n  };\n\n  return <TTable handleOnAdd={handleOnAdd} handleOnSave={handleOnSave} handleOnDelete={hand} {...args} />;\n};\n\nexport const Monday = Template.bind({});;\nMonday.args = {\n  title: 'Curl biceps',\n  muscleGroup: 'Biceps',\n  data: [\n    {\n      id: { value: 1 },\n      num: { value: 15, type: 'number' },\n      weigth: { value: 100, type: 'number' },\n    },\n    {\n      id: { value: 2 },\n      num: { value: 10, type: 'number' },\n      weigth: { value: 8, type: 'number' },\n    },\n  ],\n  min: 2,\n  max: 5,\n};\n\nexport const Breakfast = Template.bind({});\n\nBreakfast.args = {\n  title: 'Meal1',\n  data: [\n    {\n      id: { value: 1 },\n      name: { value: 'Banana', type: 'text' },\n      group: { value: 'Fruits', type: 'text' },\n      portion: { value: 100, type: 'number' },\n      units: { value: 'g', editable: false },\n      prot: { value: 0.73, type: 'number' },\n      carb: { value: 20.1, type: 'number' },\n      fat: { value: 0.22, type: 'number' },\n    },\n    {\n      id: { value: 2 },\n      name: { value: 'Chicken', type: 'text' },\n      group: { value: 'Poultry', type: 'text' },\n      portion: { value: 100, type: 'number' },\n      units: { value: 'g', editable: false },\n      prot: { value: 32.11, type: 'number' },\n      carb: { value: 20.1, type: 'number' },\n      fat: { value: 3.24, type: 'number' },\n    },\n  ],\n  min: 1,\n  max: 10,\n};\n\n\n\nMonday.parameters = { storySource: { source: \"args => {\\n  const handleOnAdd = () => {\\n    if (data.length < max) {\\n      setData([\\n        ...data,\\n        { ...data[data.length - 1], id: { value: data.length + 1 }, editable: { value: true } },\\n      ]);\\n    } else console.log('That is the max!!!');\\n  };\\n\\n  const handleOnDelete = () => {\\n    if (data.length > min) {\\n      setData(data.filter(item => item.id.value !== data.length));\\n    } else console.log('That is the min!!!');\\n  };\\n\\n  const onItemChange = item => {\\n    console.log(item);\\n    setData(\\n      data.map(serie => {\\n        if (serie.id.value === item.id.value) {\\n          return item;\\n        }\\n        return serie;\\n      }),\\n    );\\n  };\\n\\n  return <TTable handleOnAdd={handleOnAdd} handleOnSave={handleOnSave} handleOnDelete={hand} {...args} />;\\n}\" }, ...Monday.parameters };\nBreakfast.parameters = { storySource: { source: \"args => {\\n  const handleOnAdd = () => {\\n    if (data.length < max) {\\n      setData([\\n        ...data,\\n        { ...data[data.length - 1], id: { value: data.length + 1 }, editable: { value: true } },\\n      ]);\\n    } else console.log('That is the max!!!');\\n  };\\n\\n  const handleOnDelete = () => {\\n    if (data.length > min) {\\n      setData(data.filter(item => item.id.value !== data.length));\\n    } else console.log('That is the min!!!');\\n  };\\n\\n  const onItemChange = item => {\\n    console.log(item);\\n    setData(\\n      data.map(serie => {\\n        if (serie.id.value === item.id.value) {\\n          return item;\\n        }\\n        return serie;\\n      }),\\n    );\\n  };\\n\\n  return <TTable handleOnAdd={handleOnAdd} handleOnSave={handleOnSave} handleOnDelete={hand} {...args} />;\\n}\" }, ...Breakfast.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA9BA;AA+BA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AAhBA;AAmBA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AARA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AARA;AAWA;AACA;AAzBA;AA8BA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}