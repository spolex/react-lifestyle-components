{"version":3,"file":"main.36a3ec2d1ce5ab1ada76.hot-update.js","sources":["webpack:///./src/stories/Requirements.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import './requirements.css';\\nimport { Requirements } from '../components/Requirements';\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'App Test',\\n  component: Requirements\\n}\\n\\nconst passwordRequirements = [\\n    {\\n      text: 'Must be at least 8 characters',\\n      validator: val => val.length >= 8,\\n    },\\n    {\\n      text: 'Must contain at least one number',\\n      validator: val => /\\\\d/g.test(val),\\n    },\\n    {\\n      text: 'Must contain at least one lower-case letter',\\n      validator: val => /[a-z]/g.test(val),\\n    },\\n    {\\n      text: 'Must contain at least one upper-case letter',\\n      validator: val => /[A-Z]/g.test(val),\\n    }\\n  ];\\n\\nexport const Basic = () => {\\n    const [valid,  setValid] = useState(false);\\n    const [password, setPassword] = useState('');\\n  const [username, setUsername] = useState('');\\n    return (<Requirements \\n        value={password}\\n        requirements={passwordRequirements}\\n        onValidChange={isValid => setValid(isValid)}\\n    />\\n)};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Basic\":{\"startLoc\":{\"col\":21,\"line\":32},\"endLoc\":{\"col\":2,\"line\":41},\"startBody\":{\"col\":21,\"line\":32},\"endBody\":{\"col\":2,\"line\":41}}};\n    \nimport './requirements.css';\nimport { Requirements } from '../components/Requirements';\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'App Test',\n  component: Requirements\n}\n\nconst passwordRequirements = [\n    {\n      text: 'Must be at least 8 characters',\n      validator: val => val.length >= 8,\n    },\n    {\n      text: 'Must contain at least one number',\n      validator: val => /\\d/g.test(val),\n    },\n    {\n      text: 'Must contain at least one lower-case letter',\n      validator: val => /[a-z]/g.test(val),\n    },\n    {\n      text: 'Must contain at least one upper-case letter',\n      validator: val => /[A-Z]/g.test(val),\n    }\n  ];\n\nexport const Basic = () => {\n    const [valid,  setValid] = useState(false);\n    const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n    return (<Requirements \n        value={password}\n        requirements={passwordRequirements}\n        onValidChange={isValid => setValid(isValid)}\n    />\n)};\n\n\n\nBasic.parameters = { storySource: { source: \"() => {\\n    const [valid,  setValid] = useState(false);\\n    const [password, setPassword] = useState('');\\n  const [username, setUsername] = useState('');\\n    return (<Requirements \\n        value={password}\\n        requirements={passwordRequirements}\\n        onValidChange={isValid => setValid(isValid)}\\n    />\\n)}\" }, ...Basic.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AATA;AAaA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;A","sourceRoot":""}