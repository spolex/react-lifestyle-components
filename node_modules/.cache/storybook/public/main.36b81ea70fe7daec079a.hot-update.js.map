{"version":3,"file":"main.36b81ea70fe7daec079a.hot-update.js","sources":["webpack:///./src/components/Table/Table.js","webpack:///./src/components/Table/index.js","webpack:///./src/stories/Table.stories.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row } from '../Row/Row';\n\nexport const Table = ({ title, data, min, max, handleOnSave }) => {\n  const [_data, setData] = useState(data);\n\n  useEffect(() => {\n    setData(\n      _data.map(item => {\n        return { ...item, editable: { value: true } };\n      }),\n    );\n  }, []);\n\n  const handleOnAdd = () => {\n    if (_data.length < max) {\n      setData([\n        ..._data,\n        { ..._data[_data.length - 1], id: { value: _data.length + 1 }, editable: { value: true } },\n      ]);\n    } else console.log('That is the max!!!');\n  };\n\n  const handleOnDelete = () => {\n    if (_data.length > min) {\n      setData(_data.filter(item => item.id.value !== _data.length));\n    } else console.log('That is the min!!!');\n  };\n\n  const onItemChange = item => {\n    console.log(item);\n    setData(\n      _data.map(serie => {\n        if (serie.id.value === item.id.value) {\n          return item;\n        }\n        return serie;\n      }),\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>{title}</h2>\n      </div>\n      <div>\n        <table>\n          <thead>\n            <tr>\n              {Object.keys(data[0]).map(c => (\n                <th key={c}>{c}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {_data.map(item => (\n              <Row key={item.id.value} item={item} onItemChange={onItemChange}></Row>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <div xs={8}>\n          <button color=\"success\" onClick={e => handleOnSave(_data)}>\n            Save\n          </button>\n        </div>\n        <div xs={4}>\n          <button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </button>\n          <button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export * from './Table';\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport { Table } from '../components/Table';\\n\\nexport default {\\n  title: 'WORKOUT/Series',\\n  component: Table,\\n};\\n\\nexport const Monday = TTable.bind({});\\nMonday.args = {\\n  title: 'Curl biceps',\\n  muscleGroup: 'Biceps',\\n  data: [\\n    {\\n      id: { value: 1 },\\n      date: { value: '2022-11-22', type: 'date', editable: true },\\n      num: { value: 15, type: 'number', editable: true },\\n      weigth: { value: 100, type: 'number', editable: true },\\n    },\\n    {\\n      id: { value: 2 },\\n      date: { value: '2022-11-22', type: 'date', editable: true },\\n      num: { value: 10, type: 'number', editable: true },\\n      weigth: { value: 8, type: 'number', editable: true },\\n    },\\n  ],\\n  max: 5,\\n  min: 1,\\n  handleOnSave: data => {\\n    console.log('saving');\\n    console.log(data);\\n  },\\n};\\n\\nexport const Breakfast = TTable.bind({});\\n\\nBreakfast.args = {\\n  title: 'Meal1',\\n  data: [\\n    {\\n      id: { value: 1 },\\n      name: { value: 'Banana', type: 'text' },\\n      group: { value: 'Fruits', type: 'text' },\\n      portion: { value: 100, type: 'number' },\\n      units: { value: 'g', editable: false },\\n      prot: { value: 0.73, type: 'number' },\\n      carb: { value: 20.1, type: 'number' },\\n      fat: { value: 0.22, type: 'number' },\\n    },\\n    {\\n      id: { value: 2 },\\n      name: { value: 'Chicken', type: 'text' },\\n      group: { value: 'Poultry', type: 'text' },\\n      portion: { value: 100, type: 'number' },\\n      units: { value: 'g', editable: false },\\n      prot: { value: 32.11, type: 'number' },\\n      carb: { value: 20.1, type: 'number' },\\n      fat: { value: 3.24, type: 'number' },\\n    },\\n  ],\\n  max: 5,\\n  min: 1,\\n  handleOnSave: data => {\\n    console.log('saving');\\n    console.log(data);\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Monday\":{\"startLoc\":{\"col\":22,\"line\":9},\"endLoc\":{\"col\":37,\"line\":9},\"startBody\":{\"col\":22,\"line\":9},\"endBody\":{\"col\":37,\"line\":9}},\"Breakfast\":{\"startLoc\":{\"col\":25,\"line\":35},\"endLoc\":{\"col\":40,\"line\":35},\"startBody\":{\"col\":25,\"line\":35},\"endBody\":{\"col\":40,\"line\":35}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table } from '../components/Table';\n\nexport default {\n  title: 'WORKOUT/Series',\n  component: Table,\n};\n\nexport const Monday = TTable.bind({});;\nMonday.args = {\n  title: 'Curl biceps',\n  muscleGroup: 'Biceps',\n  data: [\n    {\n      id: { value: 1 },\n      date: { value: '2022-11-22', type: 'date', editable: true },\n      num: { value: 15, type: 'number', editable: true },\n      weigth: { value: 100, type: 'number', editable: true },\n    },\n    {\n      id: { value: 2 },\n      date: { value: '2022-11-22', type: 'date', editable: true },\n      num: { value: 10, type: 'number', editable: true },\n      weigth: { value: 8, type: 'number', editable: true },\n    },\n  ],\n  max: 5,\n  min: 1,\n  handleOnSave: data => {\n    console.log('saving');\n    console.log(data);\n  },\n};\n\nexport const Breakfast = TTable.bind({});\n\nBreakfast.args = {\n  title: 'Meal1',\n  data: [\n    {\n      id: { value: 1 },\n      name: { value: 'Banana', type: 'text' },\n      group: { value: 'Fruits', type: 'text' },\n      portion: { value: 100, type: 'number' },\n      units: { value: 'g', editable: false },\n      prot: { value: 0.73, type: 'number' },\n      carb: { value: 20.1, type: 'number' },\n      fat: { value: 0.22, type: 'number' },\n    },\n    {\n      id: { value: 2 },\n      name: { value: 'Chicken', type: 'text' },\n      group: { value: 'Poultry', type: 'text' },\n      portion: { value: 100, type: 'number' },\n      units: { value: 'g', editable: false },\n      prot: { value: 32.11, type: 'number' },\n      carb: { value: 20.1, type: 'number' },\n      fat: { value: 3.24, type: 'number' },\n    },\n  ],\n  max: 5,\n  min: 1,\n  handleOnSave: data => {\n    console.log('saving');\n    console.log(data);\n  },\n};\n\n\n\nMonday.parameters = { storySource: { source: \"TTable.bind({})\" }, ...Monday.parameters };\nBreakfast.parameters = { storySource: { source: \"TTable.bind({})\" }, ...Breakfast.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AADA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AADA;AADA;AARA;AADA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AApBA;AAqCA;AA5EA;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAyBA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AARA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAkCA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}