{"version":3,"file":"main.715efc7922b3b5a0165a.hot-update.js","sources":["webpack:///./src/components/Serie/Serie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row, Table } from 'reactstrap';\nimport { Rep } from '../Repetition/Rep';\n\nexport const Serie = ({ title, series }) => {\n  const [_series, setSeries] = useState(series);\n\n  useEffect(() => {}, []);\n\n  const handleOnSave = () => {\n    alert('saving');\n  };\n\n  const handleOnAdd = () => {\n    setSeries([..._series, { id: _series.length + 1, num: 0, weigth: 0, editable: true }]);\n  };\n\n  const handleOnDelete = () => {\n    setSeries(_series.filter(item => item.id !== _series.length));\n  };\n\n  const onItemChange = item => {\n    setSeries(\n      _series.map(serie => {\n        if (serie.id === item.id) {\n          return item;\n        }\n        return serie;\n      }),\n    );\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>{title}</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              {_columns.filter( item => item.id = 0)}\n              <th>#</th>\n              <th>#repetitions</th>\n              <th>weight</th>\n            </tr>\n          </thead>\n          <tbody>\n            {_series.map(item => (\n              <Rep key={item.id} item={item} onItemChange={onItemChange}></Rep>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Row>\n        <Col xs={8}>\n          <Button color=\"success\" onClick={handleOnSave}>\n            Save\n          </Button>\n        </Col>\n        <Col xs={4}>\n          <Button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </Button>\n          <Button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAJA;AADA;AAQA;AACA;AACA;AAAA;AAAA;AADA;AADA;AATA;AADA;AAiBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AArBA;AAsCA;AAnEA;;;;;;;;;;;;;;;;;A","sourceRoot":""}