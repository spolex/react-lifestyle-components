{"version":3,"file":"main.6bb59a3d036c3b35f5d2.hot-update.js","sources":["webpack:///./src/components/Repetition/Rep.js","webpack:///./src/components/Serie/Serie.js","webpack:///./src/components/Serie/index.js","webpack:///./src/stories/Series.stories.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Button, Input } from 'reactstrap';\n\nexport const Rep = ({ item, onItemChange }) => {\n  if (!item.id) console.log(\"Data item must contain 'id' field\");\n\n  return (\n    <tr>\n      <th scope=\"row\">{item.id.value}</th>\n      <td>\n        {item.editable ? (\n          <Input\n            type={item.num.type}\n            value={item.num.value}\n            onChange={event =>\n              onItemChange({ ...item, num: { value: event.target.value, type: item.num.type } })\n            }\n          />\n        ) : (\n          item.num.value\n        )}\n      </td>\n      <td>\n        {item.editable ? (\n          <Input\n            type={item.weigth.type}\n            value={item.weigth.value}\n            onChange={event =>\n              onItemChange({\n                ...item,\n                weigth: { value: event.target.value, type: item.weigth.type },\n              })\n            }\n          />\n        ) : (\n          item.weigth.value\n        )}\n      </td>\n      <td>\n        <Button color={item.editable ? 'primary' : 'danger'}>\n          {item.editable ? 'edit' : 'done'}\n        </Button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row, Table } from 'reactstrap';\nimport { Rep } from '../Repetition/Rep';\n\nexport const Serie = ({ title, data, min, max }) => {\n  const [_data, setData] = useState(data);\n\n  useEffect(() => {\n    setData(\n      _data.map(item => {\n        return { ...item, editable: true };\n      }),\n    );\n  }, []);\n\n  const handleOnSave = () => {\n    console.log('saving');\n  };\n\n  const handleOnAdd = () => {\n    if (_data.length < max) {\n      console.log({ ...data[data.length - 1], id: data.length, editable: true });\n      setData([..._data, { ...data[data.length - 1], id: { value: data.length }, editable: true }]);\n    } else console.log('That is the max!!!');\n  };\n\n  const handleOnDelete = () => {\n    if (_data.length > min) {\n      setData(_data.filter(item => item.id.value !== _data.length));\n    } else console.log('That is the min!!!');\n  };\n\n  const onItemChange = item => {\n    console.log(item);\n    setData(\n      _data.map(serie => {\n        if (serie.id.value === item.id.value) {\n          return item;\n        }\n        return serie;\n      }),\n    );\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>{title}</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              {Object.keys(data[0]).map(c => (\n                <th key={c}>{c}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {_data.map(item => (\n              <Rep key={item.id.value} item={item} onItemChange={onItemChange}></Rep>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Row>\n        <Col xs={8}>\n          <Button color=\"success\" onClick={handleOnSave}>\n            Save\n          </Button>\n        </Col>\n        <Col xs={4}>\n          <Button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </Button>\n          <Button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","export * from './Serie';\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport { Serie } from '../components/Serie';\\n\\nexport default {\\n  title: 'WORKOUT/Series',\\n  component: Serie,\\n};\\n\\nexport const Monday = Serie.bind({});\\nMonday.args = {\\n  title: 'Curl biceps',\\n  muscleGroup: 'Biceps',\\n  data: [\\n    {\\n      id: { value: 1 },\\n      num: { value: 15, type: 'number' },\\n      weigth: { value: 100, type: 'number' },\\n    },\\n    {\\n      id: { value: 2 },\\n      num: { value: 10, type: 'number' },\\n      weigth: { value: 8, type: 'number' },\\n    },\\n  ],\\n  min: 2,\\n  max: 5,\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Monday\":{\"startLoc\":{\"col\":22,\"line\":9},\"endLoc\":{\"col\":36,\"line\":9},\"startBody\":{\"col\":22,\"line\":9},\"endBody\":{\"col\":36,\"line\":9}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Serie } from '../components/Serie';\n\nexport default {\n  title: 'WORKOUT/Series',\n  component: Serie,\n};\n\nexport const Monday = Serie.bind({});\nMonday.args = {\n  title: 'Curl biceps',\n  muscleGroup: 'Biceps',\n  data: [\n    {\n      id: { value: 1 },\n      num: { value: 15, type: 'number' },\n      weigth: { value: 100, type: 'number' },\n    },\n    {\n      id: { value: 2 },\n      num: { value: 10, type: 'number' },\n      weigth: { value: 8, type: 'number' },\n    },\n  ],\n  min: 2,\n  max: 5,\n};\n\n\n\nMonday.parameters = { storySource: { source: \"Serie.bind({})\" }, ...Monday.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAFA;AAaA;AAGA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAFA;AADA;AAHA;AAFA;AAgBA;AACA;AAAA;AAAA;AADA;AA/BA;AAsCA;AA1CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AADA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AADA;AADA;AARA;AADA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AApBA;AAqCA;AA9EA;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AAhBA;AAqBA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}