{"version":3,"file":"main.4dcc3f7b411cee5ab16e.hot-update.js","sources":["webpack:///./src/stories/Requirements.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useState} from 'react';\\nimport './requirements.css';\\nimport { Requirements } from '../components/Requirements';\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'App',\\n  component: Requirements\\n}\\n\\nconst passwordRequirements = [\\n    {\\n      text: 'Must be at least 8 characters',\\n      validator: val => val.length >= 8,\\n    },\\n    {\\n      text: 'Must contain at least one number',\\n      validator: val => /\\\\d/g.test(val),\\n    },\\n    {\\n      text: 'Must contain at least one lower-case letter',\\n      validator: val => /[a-z]/g.test(val),\\n    },\\n    {\\n      text: 'Must contain at least one upper-case letter',\\n      validator: val => /[A-Z]/g.test(val),\\n    }\\n  ];\\n\\nexport const Example = () => {\\n\\n    const [valid,  setValid] = useState(false);\\n    const [password, setPassword] = useState('');\\n    const [username, setUsername] = useState('');\\n\\n    return \\n    \\n    <Requirements value={password} requirements={passwordRequirements} onValidChange={isValid => setValid(isValid)}/>};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Example\":{\"startLoc\":{\"col\":23,\"line\":33},\"endLoc\":{\"col\":118,\"line\":41},\"startBody\":{\"col\":23,\"line\":33},\"endBody\":{\"col\":118,\"line\":41}}};\n    \nimport React, {useState} from 'react';\nimport './requirements.css';\nimport { Requirements } from '../components/Requirements';\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'App',\n  component: Requirements\n}\n\nconst passwordRequirements = [\n    {\n      text: 'Must be at least 8 characters',\n      validator: val => val.length >= 8,\n    },\n    {\n      text: 'Must contain at least one number',\n      validator: val => /\\d/g.test(val),\n    },\n    {\n      text: 'Must contain at least one lower-case letter',\n      validator: val => /[a-z]/g.test(val),\n    },\n    {\n      text: 'Must contain at least one upper-case letter',\n      validator: val => /[A-Z]/g.test(val),\n    }\n  ];\n\nexport const Example = () => {\n\n    const [valid,  setValid] = useState(false);\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n\n    return \n    \n    <Requirements value={password} requirements={passwordRequirements} onValidChange={isValid => setValid(isValid)}/>};\n\n\n\nExample.parameters = { storySource: { source: \"() => {\\n\\n    const [valid,  setValid] = useState(false);\\n    const [password, setPassword] = useState('');\\n    const [username, setUsername] = useState('');\\n\\n    return \\n    \\n    <Requirements value={password} requirements={passwordRequirements} onValidChange={isValid => setValid(isValid)}/>}\" }, ...Example.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAMA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}