{"version":3,"file":"main.79181e844b34cf3b81df.hot-update.js","sources":["webpack:///./src/components/Repetition/Rep.js","webpack:///./src/components/Serie/Serie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Input } from 'reactstrap';\n\nexport const Rep = ({ id, numReps, weigth, editable }) => {\n  const [_weigth, setWeigth] = useState(weigth);\n  const [_numReps, setNumReps] = useState(numReps);\n  const [isEditable, setIsEditable] = useState(editable);\n  const [isDone, setIsDone] = useState(false);\n\n  useEffect(() => {\n    setIsEditable(editable);\n    setWeigth(weigth);\n    setNumReps(numReps);\n  }, [editable, weigth, numReps]);\n\n  const handleOnclickEdit = e => {\n    setIsEditable(true);\n  };\n\n  const handleOnclickDone = e => {\n    setIsEditable(false);\n  };\n\n  return (\n    <tr>\n      <th scope=\"row\">{id}</th>\n      <td>\n        {isEditable ? (\n          <Input type=\"number\" value={_numReps} onChange={event => setNum(event.target.value)} />\n        ) : (\n          _numReps\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <Input type=\"number\" value={_weigth} onChange={event => setWeigth(event.target.value)} />\n        ) : (\n          _weigth\n        )}\n      </td>\n      <td>\n        <Button\n          color={!isEditable ? 'primary' : 'danger'}\n          onClick={!isEditable ? handleOnclickEdit : handleOnclickDone}\n        >\n          {!isEditable ? 'edit' : 'done'}\n        </Button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row, Table } from 'reactstrap';\nimport { Rep } from '../Repetition/Rep';\n\nexport const Serie = ({ title, series }) => {\n  const [_series, setSeries] = useState(series);\n  const [isEditable, setIsEditable] = useState(true);\n  const [_title, setTitle] = useState(title);\n\n  useEffect(() => {}, []);\n\n  const handleOnSave = () => {\n    setIsEditable(false);\n  };\n\n  const handleOnAdd = () => {\n    setSeries([...series, series.length + 1]);\n  };\n\n  const handleOnDelete = () => {\n    setSeries(series.filter(id => id !== series.length));\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>{title}</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>#repetitions</th>\n              <th>weight</th>\n            </tr>\n          </thead>\n          <tbody>\n            {series.map(serie => (\n              <Rep\n                key={r}\n                serie={item}\n                numReps={_numReps}\n                weigth={_weigth}\n                editable={isEditable}\n              ></Rep>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Row>\n        <Col xs={8}>\n          <Button color=\"success\" onClick={handleOnSave}>\n            Save\n          </Button>\n        </Col>\n        <Col xs={4}>\n          <Button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </Button>\n          <Button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AACA;AAFA;AAAA;AADA;AAhBA;AA0BA;AA/CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AADA;AAOA;AACA;AAGA;AACA;AACA;AACA;AALA;AADA;AADA;AARA;AADA;AAsBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AA1BA;AA2CA;AA/DA;;;;;;;;;;;;;;;;;A","sourceRoot":""}