{"version":3,"file":"main.efaa7e7a5274b771c86c.hot-update.js","sources":["webpack:///./src/stories/Table.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport { useEffect, useState } from 'react';\\nimport { Table } from '../components/Table';\\n\\nexport default {\\n  title: 'WORKOUT/Series',\\n  component: Table,\\n};\\n\\nexport const Template = args => {\\n  const [_data, setData] = useState([]);\\n  const [_metadata, setMetadata] = useState([]);\\n  useEffect(() => {\\n    setData([\\n      { id: 1, date: '2022-11-23', repetitions: 15, weigth: 100 },\\n      { id: 2, date: '2022-11-23', repetitions: 10, weigth: 18 },\\n    ]);\\n    setMetadata({\\n      id: { name: 'id', type: 'text' },\\n      date: { name: 'date', type: 'date' },\\n      repetitions: { name: 'repetitions', type: 'number' },\\n      weigth: { name: 'weigth', type: 'number' },\\n    });\\n  }, []);\\n\\n  const onItemChange = udpatedItem => {\\n    console.log(udpatedItem)\\n    setData(\\n      _data.map(item => {\\n        if (item.id === udpatedItem.id) {\\n          console.log(udpatedItem);\\n        }\\n        console.log(item);\\n      }),\\n    );\\n  };\\n\\n  return <Table onItemChange={onItemChange} data={_data} metadata={_metadata} {...args} />;\\n};\\n\\nexport const Monday = Template.bind({});\\nMonday.args = {\\n  title: 'Curl biceps',\\n  muscleGroup: 'Biceps',\\n  max: 5,\\n  min: 1,\\n  handleOnSave: data => {\\n    console.log('saving');\\n    console.log(data);\\n  },\\n};\\n\\n// export const Breakfast = Table.bind({});\\n\\n// Breakfast.args = {\\n//   title: 'Meal1',\\n//   data: [\\n//     {\\n//       id: { value: 1 },\\n//       name: { value: 'Banana', type: 'text' },\\n//       group: { value: 'Fruits', type: 'text' },\\n//       portion: { value: 100, type: 'number' },\\n//       units: { value: 'g', editable: false },\\n//       prot: { value: 0.73, type: 'number' },\\n//       carb: { value: 20.1, type: 'number' },\\n//       fat: { value: 0.22, type: 'number' },\\n//     },\\n//     {\\n//       id: { value: 2 },\\n//       name: { value: 'Chicken', type: 'text' },\\n//       group: { value: 'Poultry', type: 'text' },\\n//       portion: { value: 100, type: 'number' },\\n//       units: { value: 'g', editable: false },\\n//       prot: { value: 32.11, type: 'number' },\\n//       carb: { value: 20.1, type: 'number' },\\n//       fat: { value: 3.24, type: 'number' },\\n//     },\\n//   ],\\n//   max: 5,\\n//   min: 1,\\n//   handleOnSave: data => {\\n//     console.log('saving');\\n//     console.log(data);\\n//   },\\n// };\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Template\":{\"startLoc\":{\"col\":24,\"line\":10},\"endLoc\":{\"col\":1,\"line\":39},\"startBody\":{\"col\":24,\"line\":10},\"endBody\":{\"col\":1,\"line\":39}},\"Monday\":{\"startLoc\":{\"col\":24,\"line\":10},\"endLoc\":{\"col\":1,\"line\":39},\"startBody\":{\"col\":24,\"line\":10},\"endBody\":{\"col\":1,\"line\":39}}};\n    \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport { Table } from '../components/Table';\n\nexport default {\n  title: 'WORKOUT/Series',\n  component: Table,\n};\n\nexport const Template = args => {\n  const [_data, setData] = useState([]);\n  const [_metadata, setMetadata] = useState([]);\n  useEffect(() => {\n    setData([\n      { id: 1, date: '2022-11-23', repetitions: 15, weigth: 100 },\n      { id: 2, date: '2022-11-23', repetitions: 10, weigth: 18 },\n    ]);\n    setMetadata({\n      id: { name: 'id', type: 'text' },\n      date: { name: 'date', type: 'date' },\n      repetitions: { name: 'repetitions', type: 'number' },\n      weigth: { name: 'weigth', type: 'number' },\n    });\n  }, []);\n\n  const onItemChange = udpatedItem => {\n    console.log(udpatedItem)\n    setData(\n      _data.map(item => {\n        if (item.id === udpatedItem.id) {\n          console.log(udpatedItem);\n        }\n        console.log(item);\n      }),\n    );\n  };\n\n  return <Table onItemChange={onItemChange} data={_data} metadata={_metadata} {...args} />;\n};;\n\nexport const Monday = Template.bind({});\nMonday.args = {\n  title: 'Curl biceps',\n  muscleGroup: 'Biceps',\n  max: 5,\n  min: 1,\n  handleOnSave: data => {\n    console.log('saving');\n    console.log(data);\n  },\n};\n\n// export const Breakfast = Table.bind({});\n\n// Breakfast.args = {\n//   title: 'Meal1',\n//   data: [\n//     {\n//       id: { value: 1 },\n//       name: { value: 'Banana', type: 'text' },\n//       group: { value: 'Fruits', type: 'text' },\n//       portion: { value: 100, type: 'number' },\n//       units: { value: 'g', editable: false },\n//       prot: { value: 0.73, type: 'number' },\n//       carb: { value: 20.1, type: 'number' },\n//       fat: { value: 0.22, type: 'number' },\n//     },\n//     {\n//       id: { value: 2 },\n//       name: { value: 'Chicken', type: 'text' },\n//       group: { value: 'Poultry', type: 'text' },\n//       portion: { value: 100, type: 'number' },\n//       units: { value: 'g', editable: false },\n//       prot: { value: 32.11, type: 'number' },\n//       carb: { value: 20.1, type: 'number' },\n//       fat: { value: 3.24, type: 'number' },\n//     },\n//   ],\n//   max: 5,\n//   min: 1,\n//   handleOnSave: data => {\n//     console.log('saving');\n//     console.log(data);\n//   },\n// };\n\n\n\nTemplate.parameters = { storySource: { source: \"args => {\\n  const [_data, setData] = useState([]);\\n  const [_metadata, setMetadata] = useState([]);\\n  useEffect(() => {\\n    setData([\\n      { id: 1, date: '2022-11-23', repetitions: 15, weigth: 100 },\\n      { id: 2, date: '2022-11-23', repetitions: 10, weigth: 18 },\\n    ]);\\n    setMetadata({\\n      id: { name: 'id', type: 'text' },\\n      date: { name: 'date', type: 'date' },\\n      repetitions: { name: 'repetitions', type: 'number' },\\n      weigth: { name: 'weigth', type: 'number' },\\n    });\\n  }, []);\\n\\n  const onItemChange = udpatedItem => {\\n    console.log(udpatedItem)\\n    setData(\\n      _data.map(item => {\\n        if (item.id === udpatedItem.id) {\\n          console.log(udpatedItem);\\n        }\\n        console.log(item);\\n      }),\\n    );\\n  };\\n\\n  return <Table onItemChange={onItemChange} data={_data} metadata={_metadata} {...args} />;\\n}\" }, ...Template.parameters };\nMonday.parameters = { storySource: { source: \"args => {\\n  const [_data, setData] = useState([]);\\n  const [_metadata, setMetadata] = useState([]);\\n  useEffect(() => {\\n    setData([\\n      { id: 1, date: '2022-11-23', repetitions: 15, weigth: 100 },\\n      { id: 2, date: '2022-11-23', repetitions: 10, weigth: 18 },\\n    ]);\\n    setMetadata({\\n      id: { name: 'id', type: 'text' },\\n      date: { name: 'date', type: 'date' },\\n      repetitions: { name: 'repetitions', type: 'number' },\\n      weigth: { name: 'weigth', type: 'number' },\\n    });\\n  }, []);\\n\\n  const onItemChange = udpatedItem => {\\n    console.log(udpatedItem)\\n    setData(\\n      _data.map(item => {\\n        if (item.id === udpatedItem.id) {\\n          console.log(udpatedItem);\\n        }\\n        console.log(item);\\n      }),\\n    );\\n  };\\n\\n  return <Table onItemChange={onItemChange} data={_data} metadata={_metadata} {...args} />;\\n}\" }, ...Monday.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AA7BA;AA6BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;A","sourceRoot":""}