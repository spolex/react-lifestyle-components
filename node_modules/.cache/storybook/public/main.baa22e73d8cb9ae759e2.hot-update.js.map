{"version":3,"file":"main.baa22e73d8cb9ae759e2.hot-update.js","sources":["webpack:///./src/components/Food/Food.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Input } from 'reactstrap';\n\nexport const Food = ({ id, units, name, group, portion, prot, carb, fat, editable }) => {\n  const [_id, setId] = useState(id);\n  const [_units, setUnits] = useState(units);\n  const [_name, setName] = useState(name);\n  const [_group, setGroup] = useState(group);\n  const [_portion, setPortion] = useState(portion);\n  const [_prot, setProt] = useState(prot);\n  const [_carb, setCarb] = useState(carb);\n  const [_fat, setFat] = useState(fat);\n  const [cals, setCals] = useState(4 * (prot + carb) + fat * 9);\n  const [isEditable, setIsEditable] = useState(editable);\n  const [isDone, setIsDone] = useState(false);\n\n  useEffect(() => {\n    setCals(Math.round((_carb + _prot) * 4 + _fat * 9));\n    setIsEditable(editable);\n  }, [_prot, _carb, _fat, editable]);\n\n  const handleOnclickEdit = e => {\n    setIsEditable(true);\n  };\n\n  const handleOnclickDone = e => {\n    setIsEditable(false);\n  };\n\n  return (\n    <tr>\n      <th scope=\"row\">{_id}</th>\n      <td>\n        {isEditable ? (\n          <Input type=\"text\" value={_name} onChange={event => setName(event.target.value)} />\n        ) : (\n          _name\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <Input type=\"text\" value={_group} onChange={event => setGroup(event.target.value)} />\n        ) : (\n          _group\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <Input\n            type=\"number\"\n            value={_portion}\n            onChange={event => setPortion(event.target.value)}\n          />\n        ) : (\n          _portion + ' ' + _units\n        )}\n      </td>\n      <td>{cals}</td>\n      <td>\n        {isEditable ? (\n          <Input type value={_prot} onChange={event => setProt(event.target.value)} />\n        ) : (\n          _prot + ' g'\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <input value={_carb} onChange={event => setCarb(event.target.value)} />\n        ) : (\n          _carb + ' g'\n        )}\n      </td>\n      <td>\n        {isEditable ? (\n          <input value={_fat} onChange={event => setFat(event.target.value)} />\n        ) : (\n          _fat + ' g'\n        )}\n      </td>\n      <td>\n        <Button\n          color={!isEditable ? 'primary' : 'danger'}\n          onClick={!isEditable ? handleOnclickEdit : handleOnclickDone}\n        >\n          {!isEditable ? 'edit' : 'done'}\n        </Button>\n      </td>\n    </tr>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAGA;AACA;AACA;AAAA;AAAA;AAHA;AAFA;AAWA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAEA;AACA;AAFA;AAAA;AADA;AAjDA;AA2DA;AAtFA;;;;;;;;;;;;;;;;;A","sourceRoot":""}