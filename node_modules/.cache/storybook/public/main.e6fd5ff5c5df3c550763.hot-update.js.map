{"version":3,"file":"main.e6fd5ff5c5df3c550763.hot-update.js","sources":["webpack:///./src/components/Row/Row.js","webpack:///./src/components/Serie/Serie.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Button, Input } from 'reactstrap';\n\nexport const Row = ({ item, onItemChange }) => {\n  if (!item.id) return <></>;\n  if (!item.editable) return <></>;\n\n  useEffect(() => {\n    Object.keys(item).map(key => console.log(key + ' -> ' + item[key].value));\n  }, []);\n\n  return (\n    <tr>\n      {Object.keys(item).map(key => {\n        if (key === 'id') {\n          return (\n            <th key={key} scope=\"row\">\n              {item[key].value}\n            </th>\n          );\n        }\n        if (key === 'editable') {\n          return (\n            <td key={key}>\n              <Button\n                color={item[key].value ? 'primary' : 'danger'}\n                onClick={event => onItemChange({ ...item, [key]: { value: !item[key].value } })}\n              >\n                {item[key].value ? 'edit' : 'done'}\n              </Button>\n            </td>\n          );\n        } else {\n          return (\n            <td key={key}>\n              {!!item.editable.value ? (\n                <Input\n                  type={item[key].type}\n                  value={item[key].value}\n                  onChange={event => {\n                    console.log(item);\n                    onItemChange({\n                      ...item,\n                      [key]: { value: event.target.value, type: item[key].type },\n                    });\n                    console.log(item);\n                  }}\n                />\n              ) : (\n                item[key].value\n              )}\n            </td>\n          );\n        }\n      })}\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row, Table } from 'reactstrap';\nimport { Rep } from '../Row/Row';\n\nexport const Serie = ({ title, data, min, max }) => {\n  const [_data, setData] = useState(data);\n\n  useEffect(() => {\n    setData(\n      _data.map(item => {\n        return { ...item, editable: { value: true } };\n      }),\n    );\n  }, []);\n\n  const handleOnSave = () => {\n    console.log('saving');\n  };\n\n  const handleOnAdd = () => {\n    if (_data.length < max) {\n      setData([\n        ..._data,\n        { ..._data[_data.length - 1], id: { value: _data.length + 1 }, editable: { value: true } },\n      ]);\n    } else console.log('That is the max!!!');\n  };\n\n  const handleOnDelete = () => {\n    if (_data.length > min) {\n      setData(_data.filter(item => item.id.value !== _data.length));\n    } else console.log('That is the min!!!');\n  };\n\n  const onItemChange = item => {\n    console.log(item);\n    setData(\n      _data.map(serie => {\n        if (serie.id.value === item.id.value) {\n          return item;\n        }\n        return serie;\n      }),\n    );\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h2>{title}</h2>\n      </Row>\n      <Row>\n        <Table>\n          <thead>\n            <tr>\n              {Object.keys(data[0]).map(c => (\n                <th key={c}>{c}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {_data.map(item => (\n              <Rep key={item.id.value} item={item} onItemChange={onItemChange}></Rep>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Row>\n        <Col xs={8}>\n          <Button color=\"success\" onClick={handleOnSave}>\n            Save\n          </Button>\n        </Col>\n        <Col xs={4}>\n          <Button color=\"danger\" onClick={handleOnDelete}>\n            -\n          </Button>\n          <Button color=\"primary\" onClick={handleOnAdd}>\n            +\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AADA;AASA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAVA;AAFA;AAmBA;AACA;AA1CA;AA6CA;AAtDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AADA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AADA;AADA;AARA;AADA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AANA;AApBA;AAqCA;AAhFA;;;;;;;;;;;;;;;;;A","sourceRoot":""}