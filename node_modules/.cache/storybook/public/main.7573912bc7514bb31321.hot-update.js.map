{"version":3,"file":"main.7573912bc7514bb31321.hot-update.js","sources":["webpack:///./src/components/Barchart/Barchart.js"],"sourcesContent":["import { Bar, Chart } from '../Chart/Chart';\nimport { Container, Row } from 'reactstrap';\n\nexport * from './Barchart';\n// import { Chart, Bar } from './Chart';\n\nexport const Barchart = ({ data }) => {\n  // Width of each bar\n  const itemWidth = 20;\n\n  //   // Distance between each bar\n  const itemMargin = 5;\n\n  const dataLength = data.length;\n\n  //   // Normalize data, we'll reduce all sizes to 25% of their original value\n  const massagedData = data.map(datum =>\n    Object.assign({}, datum, { past: datum.past * 0.25, actual: datum.actual * 0.25 }),\n  );\n\n  const mostRepos = massagedData.reduce((acc, cur) => {\n    const { past } = cur;\n    const { actual } = cur;\n    console.log(actual);\n    return past > acc ? past : acc;\n  }, 0);\n\n  const chartHeight = mostRepos;\n\n  return (\n    <div>\n      <Chart width={2 * dataLength * (itemWidth + itemMargin)} height={chartHeight}>\n        {massagedData.map((datum, index) => (\n          <>\n            <Bar\n              key={datum.name}\n              x={\n                index == 0 ? index * (itemWidth + itemMargin) : index * (2 * itemWidth + itemMargin)\n              }\n              y={0}\n              width={itemWidth}\n              height={datum.past}\n              fill=\"teal\"\n            />\n            <Bar\n              key={datum.name}\n              x={\n                index == 0\n                  ? (index + 0.85) * (itemWidth + itemMargin)\n                  : (index + 0.85) * (2 * itemWidth + itemMargin)\n              }\n              y={0}\n              width={itemWidth}\n              height={datum.actual}\n              fill=\"orange\"\n            />\n          </>\n        ))}\n      </Chart>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AARA;AAYA;AAKA;AACA;AACA;AACA;AAVA;AAXA;AADA;AADA;AADA;AA+BA;AAvDA;;;;;;;;;;;;;;;;;A","sourceRoot":""}