{"version":3,"file":"main.4283a8d61c9783318706.hot-update.js","sources":["webpack:///./src/components/Checkmark/Checkmark.js","webpack:///./src/components/Requirement/Requirement.js","webpack:///./src/components/Requirements/Requirements.js","webpack:///./src/components/Xmark/Xmark.js","webpack:///./src/stories/Requirements.stories.jsx"],"sourcesContent":["// Ported from Alexander Haniotis' code here: https://codepen.io/haniotis/pen/KwvYLO\nimport React from \"react\";\n\nexport const Checkmark = () => {\n  return (\n    <svg \n      className=\"checkmark\"\n      viewBox=\"0 0 52 52\">\n        <circle \n          className=\"checkmark__circle\" \n          cx=\"26\" \n          cy=\"26\"\n          r=\"25\" \n          fill=\"none\"\n        />\n        <path \n          className=\"checkmark__check\" \n          fill=\"none\" \n          d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n        />\n    </svg>\n  );\n}","import { Xmark } from \"../Xmark\";\nimport { Checkmark } from \"../Checkmark\";\nimport React, { useEffect, useState } from \"react\";\n\nexport const Requirement = ({ value, requirement }) => {\n  const [isValid, setIsValid] = useState();\n\n  useEffect(() => {\n    setIsValid(requirement.validator(value));\n  }, [value, requirement]);\n\n  return (\n    <div className='requirement'>\n      {isValid ? <Checkmark /> : <Xmark />}\n      \n      <p className={isValid ? 'valid' : 'invalid'}>\n        {requirement.text}\n      </p>\n    </div>\n  );\n};","import '../../styles.css';\nimport { Requirement } from '../Requirement';\nimport React, { useCallback, useEffect } from 'react';\n\nexport const Requirements = ({\n    value,\n    requirements,\n    onValidChange,\n  }) => {\n  const validChangeCb = useCallback(onValidChange, []);\n\n  useEffect(() => {\n    validChangeCb(\n      requirements.every(r => r.validator(value))\n    );\n  }, [value, requirements, validChangeCb]);\n\n  return requirements.map((r, index) => (\n    <Requirement\n      key={index}\n      value={value}\n      requirement={r}\n      onValidChange={onValidChange}\n    />\n  ));\n};\n","import React from \"react\";\n\nexport const Xmark = () => {\n  return (\n    <svg \n      x=\"0px\"\n      y=\"0px\" \n      width=\"15px\" \n      height=\"15px\" \n      viewBox=\"0 0 122.879 122.879\" \n      enableBackground=\"new 0 0 122.879 122.879\">\n        <g>\n          <path \n            fillRule=\"evenodd\" \n            clipRule=\"evenodd\" \n            fill=\"#FF4141\"\n            d=\"M61.44,0c33.933,0,61.439,27.507,61.439,61.439 s-27.506,61.439-61.439,61.439C27.507,122.879,0,95.372,0,61.439S27.507,0,61.44,0L61.44,0z M73.451,39.151 c2.75-2.793,7.221-2.805,9.986-0.027c2.764,2.776,2.775,7.292,0.027,10.083L71.4,61.445l12.076,12.249 c2.729,2.77,2.689,7.257-0.08,10.022c-2.773,2.765-7.23,2.758-9.955-0.013L61.446,71.54L49.428,83.728 c-2.75,2.793-7.22,2.805-9.986,0.027c-2.763-2.776-2.776-7.293-0.027-10.084L51.48,61.434L39.403,49.185 c-2.728-2.769-2.689-7.256,0.082-10.022c2.772-2.765,7.229-2.758,9.953,0.013l11.997,12.165L73.451,39.151L73.451,39.151z\"/>\n        </g>\n    </svg>\n  );\n};","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useState} from 'react';\\nimport './requirements.css';\\nimport { Requirements } from '../components/Requirements';\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'My first story',\\n  component: Requirements\\n}\\n\\nconst passwordRequirements = [\\n    {\\n      text: 'Must be at least 8 characters',\\n      validator: val => val.length >= 8,\\n    },\\n    {\\n      text: 'Must contain at least one number',\\n      validator: val => /\\\\d/g.test(val),\\n    },\\n    {\\n      text: 'Must contain at least one lower-case letter',\\n      validator: val => /[a-z]/g.test(val),\\n    },\\n    {\\n      text: 'Must contain at least one upper-case letter',\\n      validator: val => /[A-Z]/g.test(val),\\n    }\\n  ];\\n\\nexport const Example = () => {\\n\\n    const [valid,  setValid] = useState(false);\\n    const [password, setPassword] = useState('');\\n    const [username, setUsername] = useState('');\\n\\n    return (\\n        <div className='form'>\\n            <h1>Signup</h1>\\n            <Requirements   value={password} \\n                            requirements={passwordRequirements} \\n                            onValidChange={isValid => setValid(isValid)}/>\\n\\n        <input placeholder='Username' value={username} onChange={e => setUsername(e.target.value)} />\\n        <input placeholder='Password' type='password' value={password} onChange={e => setPassword(e.target.value)} />\\n        <button disabled={!valid || !username}>Sign Up</button>\\n\\n        </div>\\n    )};\\n\\nExample.storyName = 'Story first example';\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Example\":{\"startLoc\":{\"col\":23,\"line\":33},\"endLoc\":{\"col\":6,\"line\":51},\"startBody\":{\"col\":23,\"line\":33},\"endBody\":{\"col\":6,\"line\":51}}};\n    \nimport React, {useState} from 'react';\nimport './requirements.css';\nimport { Requirements } from '../components/Requirements';\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'My first story',\n  component: Requirements\n}\n\nconst passwordRequirements = [\n    {\n      text: 'Must be at least 8 characters',\n      validator: val => val.length >= 8,\n    },\n    {\n      text: 'Must contain at least one number',\n      validator: val => /\\d/g.test(val),\n    },\n    {\n      text: 'Must contain at least one lower-case letter',\n      validator: val => /[a-z]/g.test(val),\n    },\n    {\n      text: 'Must contain at least one upper-case letter',\n      validator: val => /[A-Z]/g.test(val),\n    }\n  ];\n\nexport const Example = () => {\n\n    const [valid,  setValid] = useState(false);\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n\n    return (\n        <div className='form'>\n            <h1>Signup</h1>\n            <Requirements   value={password} \n                            requirements={passwordRequirements} \n                            onValidChange={isValid => setValid(isValid)}/>\n\n        <input placeholder='Username' value={username} onChange={e => setUsername(e.target.value)} />\n        <input placeholder='Password' type='password' value={password} onChange={e => setPassword(e.target.value)} />\n        <button disabled={!valid || !username}>Sign Up</button>\n\n        </div>\n    )};\n\nExample.storyName = 'Story first example';\n\n\n\n\nExample.parameters = { storySource: { source: \"() => {\\n\\n    const [valid,  setValid] = useState(false);\\n    const [password, setPassword] = useState('');\\n    const [username, setUsername] = useState('');\\n\\n    return (\\n        <div className='form'>\\n            <h1>Signup</h1>\\n            <Requirements   value={password} \\n                            requirements={passwordRequirements} \\n                            onValidChange={isValid => setValid(isValid)}/>\\n\\n        <input placeholder='Username' value={username} onChange={e => setUsername(e.target.value)} />\\n        <input placeholder='Password' type='password' value={password} onChange={e => setPassword(e.target.value)} />\\n        <button disabled={!valid || !username}>Sign Up</button>\\n\\n        </div>\\n    )}\" }, ...Example.parameters };"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AAEA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAVA;AAiBA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AAHA;AAQA;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;;AAEA;AAIA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAJA;AADA;AAQA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AADA;AAPA;AAgBA;AAlBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAFA;AAMA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAWA;AAlBA;AAoBA;AAKA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;A","sourceRoot":""}